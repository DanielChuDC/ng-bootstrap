var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AuthComponent.html",[0,0.533,1,0.987]],["body/components/AuthComponent.html",[0,0.645,1,1.082,2,0.286,3,0.286,4,0.695,5,0.695,6,0.695,7,0.202,8,0.979,9,1.339,10,2.041,11,2.555,12,0.695,13,1.989,14,1.989,15,1.365,16,1.593,17,1.14,18,2.01,19,1.14,20,2.01,21,0.242,22,0.849,23,2.438,24,2.956,25,2.801,26,1.197,27,2.956,28,2.956,29,2.956,30,2.956,31,2.956,32,2.956,33,2.956,34,2.956,35,2.956,36,2.956,37,2.956,38,2.956,39,2.956,40,2.956,41,0.736,42,2.745,43,2.956,44,2.956,45,2.956,46,2.956,47,2.361,48,1.969,49,2.956,50,2.174,51,2.555,52,0.809,53,3.263,54,2.555,55,2.555,56,0.598,57,1.225,58,2.041,59,2.801,60,1.712,61,1.84,62,2.01,63,0.518,64,0.057,65,1.176,66,1.284,67,0.388,68,2.01,69,1.989,70,1.712,71,1.593,72,1.225,73,0.957,74,1.605,75,1.225,76,1.339,77,1.225,78,1.225,79,1.225,80,1.415,81,2.667,82,1.225,83,1.225,84,1.225,85,1.225,86,1.225,87,1.225,88,1.225,89,1.677,90,1.225,91,1.225,92,1.225,93,1.225,94,2.956,95,1.225,96,1.225,97,1.225,98,4.808,99,4.385,100,1.225,101,1.225,102,1.225,103,1.225,104,1.225,105,1.225,106,1.225,107,1.225,108,1.225,109,2.956,110,1.225,111,2.01,112,1.225,113,1.225,114,1.605,115,1.225,116,1.225,117,0.732,118,0.518,119,1.225,120,0.388,121,3.703,122,2.958,123,0.816,124,0.816,125,0.598,126,0.598,127,1.225,128,0.816,129,1.225,130,0.695,131,0.816,132,0.598,133,0.421,134,0.981,135,0.979,136,1.783,137,0.979,138,1.702,139,1.605,140,0.979,141,0.979,142,1.605,143,0.979,144,2.041,145,0.979,146,0.979,147,0.979,148,0.979,149,0.388,150,1.225,151,0.598,152,0.598,153,0.598,154,0.598,155,0.979,156,1.225,157,1.225,158,1.225,159,1.225,160,1.225,161,1.225,162,1.225,163,1.225,164,2.01,165,1.225,166,2.01,167,1.225,168,1.225,169,1.225,170,1.225,171,1.225,172,0.979,173,1.225,174,0.816,175,1.225,176,1.225,177,1.225,178,1.225,179,1.225,180,0.979,181,1.225,182,1.225,183,1.225,184,3.506,185,2.555,186,1.225,187,1.225,188,2.01,189,2.01,190,1.225,191,1.225,192,1.225,193,1.225,194,0.697,195,1.225,196,2.297,197,1.225,198,1.225,199,1.225,200,3.788,201,3.788,202,3.088,203,3.291,204,3.506,205,2.801,206,1.677,207,2.01,208,1.14,209,2.01,210,1.14,211,2.956,212,2.361,213,3.866,214,3.506,215,2.956,216,2.956,217,2.01,218,1.605,219,2.956,220,2.01,221,2.01,222,2.01,223,2.01,224,0.518,225,1.14,226,1.14,227,1.14,228,1.677,229,0.695,230,0.695,231,0.449,232,0.695,233,0.449,234,0.695,235,0.449,236,0.598,237,0.695,238,0.695,239,0.021,240,0.021]],["title/injectables/AuthProcessService.html",[60,1.317,118,1.139]],["body/injectables/AuthProcessService.html",[2,0.261,3,0.261,7,0.185,9,0.746,15,1.063,21,0.221,22,0.788,23,2.397,26,0.763,41,0.683,42,0.746,48,1.242,52,1.181,56,0.546,59,2.679,60,0.91,61,1.674,63,1.635,64,0.057,65,1.281,66,1.204,67,1.354,69,1.36,70,0.91,71,1.365,73,1.36,80,1.773,81,1.242,89,1.586,117,0.845,118,1.013,120,0.355,124,0.746,133,0.307,134,1.17,136,1.911,138,0.746,149,0.355,151,1.638,152,1.638,153,1.638,154,1.638,174,1.597,194,1.315,196,2.274,206,1.586,210,2.114,239,0.025,240,0.02,241,3.687,242,0.894,243,2.796,244,2.796,245,2.796,246,1.863,247,1.863,248,4.412,249,2.796,250,1.865,251,2.796,252,1.865,253,1.865,254,1.865,255,1.489,256,2.796,257,1.489,258,1.865,259,1.119,260,2.397,261,1.586,262,1.865,263,1.119,264,2.233,265,1.865,266,1.119,267,1.119,268,1.119,269,1.865,270,1.119,271,0.894,272,1.865,273,4.412,274,1.119,275,1.865,276,2.836,277,1.119,278,1.915,279,1.242,280,1.119,281,2.977,282,2.796,283,1.242,284,1.119,285,1.489,286,1.489,287,3.472,288,1.462,289,1.489,290,2.483,291,2.679,292,1.865,293,1.865,294,1.242,295,1.119,296,1.242,297,1.119,298,1.242,299,1.489,300,1.489,301,1.865,302,2.977,303,1.119,304,1.489,305,1.489,306,2.796,307,2.233,308,1.489,309,1.597,310,1.119,311,2.679,312,1.119,313,1.119,314,4.098,315,1.119,316,1.119,317,1.058,318,1.058,319,1.119,320,0.894,321,0.746,322,1.119,323,2.397,324,1.242,325,1.119,326,1.242,327,1.119,328,1.242,329,1.119,330,1.119,331,1.242,332,1.119,333,0.894,334,1.242,335,0.894,336,1.36,337,0.746,338,3.87,339,3.557,340,1.119,341,1.119,342,1.119,343,1.865,344,1.489,345,3.557,346,1.119,347,3.354,348,1.119,349,4.412,350,1.119,351,3.354,352,1.119,353,1.119,354,1.119,355,2.796,356,1.119,357,1.119,358,1.119,359,1.119,360,1.119,361,1.119,362,1.119,363,1.865,364,1.865,365,1.865,366,1.865,367,1.119,368,2.397,369,2.397,370,2.397,371,1.119,372,1.865,373,1.119,374,1.119,375,1.119,376,1.119,377,1.119,378,0.894,379,1.489,380,1.489,381,1.489,382,1.489,383,2.481,384,1.119,385,1.119,386,1.865,387,1.119,388,1.119,389,1.119,390,1.119,391,1.119,392,0.894,393,0.894,394,0.894,395,1.119,396,1.119,397,1.865,398,1.119,399,1.119,400,1.119,401,1.119,402,1.119,403,1.119,404,1.119,405,0.894,406,1.119,407,1.119,408,1.119,409,1.119,410,1.119,411,1.865,412,1.119,413,1.119,414,1.119,415,1.119]],["title/components/AuthProvidersComponent.html",[0,0.533,231,0.987]],["body/components/AuthProvidersComponent.html",[0,0.915,1,1.004,2,0.641,3,0.641,4,1.556,5,1.556,6,1.556,7,0.452,12,1.556,13,2.702,14,2.702,15,1.509,16,2.259,17,2.087,19,2.087,21,0.542,22,1.554,23,1.796,25,3.696,26,1.328,50,3.082,52,1.466,56,1.339,60,2.325,61,1.694,63,1.159,64,0.057,65,1.133,66,1.211,67,0.869,69,2.355,70,2.027,73,1.3,74,2.939,117,0.727,120,0.869,125,1.339,126,1.339,133,0.607,149,0.869,151,2.027,152,2.027,153,2.027,154,2.027,194,0.749,224,1.159,225,2.087,226,2.087,227,2.087,228,2.516,229,1.556,230,1.556,231,1.624,232,1.556,233,1.004,234,1.556,235,1.004,236,1.339,237,1.556,238,1.556,239,0.039,240,0.039,333,2.191,337,1.827,416,2.191,417,3.679,418,3.679,419,3.543,420,2.742,421,3.679,422,3.679,423,2.742,424,2.742,425,2.742,426,2.939,427,2.939]],["title/components/EmailConfirmationComponent.html",[0,0.533,233,0.987]],["body/components/EmailConfirmationComponent.html",[0,0.918,1,1.013,2,0.646,3,0.646,4,1.57,5,1.57,6,1.57,7,0.456,9,2.466,10,3.331,12,1.57,13,2.709,14,2.709,15,1.513,16,2.266,17,2.1,19,2.1,21,0.547,41,1.355,47,3.556,50,2.966,56,2.036,61,1.527,64,0.055,65,1.01,66,0.755,73,1.01,80,1.013,81,1.844,117,0.547,120,0.877,133,0.456,149,0.877,174,2.466,194,1.406,200,3.958,201,3.958,205,3.556,208,2.1,210,2.1,224,1.169,225,2.1,226,2.1,227,2.1,228,2.526,229,1.57,230,1.57,231,1.013,232,1.57,233,1.63,234,1.57,235,1.013,236,1.351,237,1.57,238,1.57,239,0.039,240,0.039,298,2.466,300,4.049,428,4.452,429,3.556,430,2.767,431,3.701,432,3.701,433,3.701,434,2.767,435,3.701,436,3.701,437,2.956,438,2.956,439,3.701,440,3.701]],["title/injectables/FirestoreSyncService.html",[118,1.139,261,1.53]],["body/injectables/FirestoreSyncService.html",[2,0.6,3,0.6,7,0.423,21,0.508,22,1.486,23,2.516,41,1.288,56,1.253,61,1.71,63,1.91,64,0.057,65,1.235,66,1.275,67,1.433,71,1.717,73,1.275,80,1.809,117,0.854,118,1.695,120,0.813,133,0.58,134,2.108,149,0.813,194,0.701,239,0.037,240,0.037,261,1.995,264,3.448,276,2.649,278,3.612,288,0.94,294,1.71,302,2.05,309,1.71,336,1.456,337,1.71,378,2.05,379,3.205,380,2.05,381,2.05,382,2.05,383,2.05,392,2.05,393,2.05,394,2.05,441,3.82,442,2.05,443,4.522,444,3.517,445,3.517,446,3.517,447,4.013,448,2.567,449,4.67,450,2.567,451,3.517,452,2.567,453,3.517,454,2.567,455,4.522,456,3.517,457,4.67,458,2.567,459,4.013,460,3.517,461,2.567,462,2.567,463,2.05,464,2.567,465,2.05,466,2.567,467,2.567,468,2.567,469,2.567,470,2.567,471,3.517,472,2.567,473,2.567,474,2.567,475,2.81,476,2.567,477,2.567,478,2.567,479,2.567,480,2.05]],["title/interfaces/ISignInProcess.html",[317,1.53,481,0.854]],["body/interfaces/ISignInProcess.html",[2,0.788,3,0.788,7,0.556,21,0.667,22,1.777,26,1.31,41,1.54,48,2.803,52,1.069,61,1.54,63,1.777,64,0.056,65,1.148,66,1.31,67,1.333,73,1.446,80,1.54,117,0.667,125,1.647,126,1.647,133,0.694,194,1.348,196,2.343,239,0.044,240,0.044,246,3.198,247,3.198,255,3.36,279,2.803,283,2.803,294,2.803,296,2.248,317,2.386,318,1.914,481,1.452,482,2.695,483,3.374,484,3.374]],["title/interfaces/ISignUpProcess.html",[318,1.53,481,0.854]],["body/interfaces/ISignUpProcess.html",[2,0.842,3,0.842,7,0.595,21,0.713,26,1.196,41,1.604,61,1.32,63,1.523,64,0.055,65,1.196,66,0.984,67,1.142,73,1.458,80,1.32,117,0.713,125,1.76,126,1.76,133,0.723,194,1.341,196,2.398,239,0.046,240,0.046,246,2.402,247,2.402,257,3.501,279,2.402,283,2.402,296,2.92,317,2.045,318,2.486,481,1.496,482,2.88,485,3.605]],["title/interfaces/NgBootstrapAuthFirebaseUIConfig.html",[481,0.854,486,1.53]],["body/interfaces/NgBootstrapAuthFirebaseUIConfig.html",[2,0.701,3,0.701,7,0.495,21,0.594,22,1.65,26,1.334,64,0.057,66,1.377,67,1.679,71,1.907,73,1.423,89,1.703,117,0.594,133,0.644,134,1.466,136,1.942,155,3.467,239,0.041,240,0.041,307,3.119,311,4.072,324,2,326,2,328,2,331,2,405,2.398,481,1.237,486,2.462,487,2.398,488,4.596,489,4.596,490,3.807,491,4.596,492,3.807,493,3.807,494,4.596,495,3.002,496,3.002,497,3.119,498,3.002,499,2.398,500,3.002,501,3.002,502,3.002,503,2,504,2.398]],["title/modules/NgbAuthFirebaseUIModule.html",[505,1.139,506,1.317]],["body/modules/NgbAuthFirebaseUIModule.html",[0,0.483,1,1.861,2,0.571,3,0.571,7,0.403,15,0.774,23,1.193,26,0.667,52,1.408,60,1.909,64,0.057,73,0.667,80,0.895,117,1.022,120,0.774,123,1.628,124,1.628,125,1.66,126,1.66,128,1.628,130,1.386,131,1.628,132,1.66,133,0.838,134,1.193,136,1.032,149,0.774,206,1.386,224,1.032,231,1.861,233,1.861,235,1.861,239,0.036,240,0.036,261,2.218,288,0.895,320,2.716,429,2.716,463,1.952,481,0.774,486,2.218,499,1.952,503,2.265,505,1.436,506,2.535,507,1.193,508,2.605,509,1.952,510,1.952,511,1.952,512,2.716,513,1.386,514,1.952,515,1.952,516,1.952,517,3.4,518,2.443,519,3.4,520,3.123,521,3.4,522,3.4,523,3.4,524,3.4,525,3.4,526,3.4,527,1.628,528,3.91,529,3.4,530,3.4,531,3.4,532,2.443,533,3.91,534,2.443,535,3.4,536,3.4,537,3.4,538,2.716,539,3.4,540,3.4,541,2.443,542,1.952,543,2.716,544,1.952,545,2.443,546,2.443,547,2.443,548,3.4,549,2.716,550,3.4,551,2.443,552,2.443]],["title/components/ProgressBarComponent.html",[0,0.533,235,0.987]],["body/components/ProgressBarComponent.html",[0,0.973,1,1.222,2,0.779,3,0.779,4,1.893,5,1.893,6,1.893,7,0.55,12,1.893,13,2.849,14,2.849,15,1.591,16,2.403,17,2.37,19,2.37,64,0.056,65,1.141,117,0.66,120,1.057,133,0.55,149,1.057,194,0.911,224,1.41,225,2.37,226,2.37,227,2.37,228,2.712,229,1.893,230,1.893,231,1.222,232,1.893,233,1.222,234,1.893,235,1.75,236,2.488,237,2.588,238,1.893,239,0.044,240,0.044,538,2.666,553,3.337,554,3.337,555,4.178,556,4.178]],["title/changelog.html",[557,1.515,558,1.515,559,2.273]],["body/changelog.html",[64,0.051,239,0.051,240,0.051]],["title/dependencies.html",[507,1.578,560,1.816]],["body/dependencies.html",[64,0.056,120,1.249,123,2.626,128,2.626,130,2.236,131,2.626,132,1.924,239,0.049,240,0.049,288,1.443,507,1.924,527,2.626,561,4.904,562,3.941,563,3.941,564,3.148,565,3.941,566,3.148,567,3.148,568,3.941]],["title/miscellaneous/enumerations.html",[569,1.29,570,2.581]],["body/miscellaneous/enumerations.html",[21,0.713,26,1.196,64,0.046,70,2.631,151,2.14,152,2.14,153,2.14,154,2.14,208,2.486,239,0.046,240,0.046,241,2.88,242,3.501,288,1.32,321,3.451,334,2.92,335,2.88,336,2.486,416,2.88,419,3.501,426,3.501,427,3.501,569,2.045,570,2.88,571,3.605,572,3.605,573,3.605,574,3.605,575,3.605,576,3.501,577,4.382]],["title/index.html",[21,0.45,557,1.515,558,1.515]],["body/index.html",[0,0.674,7,0.447,15,1.307,16,2.014,41,0.488,42,0.888,52,1.156,64,0.054,65,0.588,67,0.422,76,0.888,114,1.065,117,0.816,122,2.724,130,1.536,132,2.297,133,0.355,136,0.563,149,0.682,151,1.322,152,1.518,153,1.665,154,1.518,172,1.065,194,1.048,196,1.874,202,2.724,203,1.065,208,0.756,210,2.642,212,1.065,218,1.065,236,0.651,239,0.023,240,0.023,271,1.065,276,2.069,281,2.483,285,1.72,286,1.065,287,2.913,288,0.991,289,2.724,290,2.885,291,1.065,298,2.071,299,1.065,304,1.065,305,2.724,308,2.483,309,1.804,321,2.272,334,2.071,336,0.756,344,1.065,437,1.72,438,1.065,475,1.72,505,1.441,506,1.665,507,1.665,508,1.435,513,1.536,520,1.72,527,0.888,542,1.065,549,1.72,560,1.065,564,1.065,566,1.72,567,2.163,576,2.483,578,4.485,579,4.745,580,1.333,581,2.708,582,1.333,583,2.708,584,3.108,585,2.708,586,1.333,587,1.333,588,1.333,589,1.333,590,1.333,591,1.333,592,2.708,593,2.153,594,2.153,595,1.333,596,3.634,597,2.153,598,1.333,599,1.333,600,1.333,601,1.333,602,3.838,603,2.153,604,2.708,605,2.153,606,2.708,607,1.72,608,3.647,609,1.333,610,1.065,611,1.333,612,1.333,613,3.838,614,2.153,615,2.153,616,1.333,617,1.333,618,3.647,619,3.411,620,2.153,621,2.071,622,5.231,623,4.849,624,5.107,625,1.333,626,2.153,627,3.108,628,2.153,629,2.708,630,1.065,631,3.994,632,2.708,633,2.708,634,2.708,635,2.708,636,3.108,637,1.333,638,2.153,639,2.708,640,1.333,641,1.333,642,1.333,643,2.153,644,1.333,645,1.333,646,1.333,647,2.153,648,1.333,649,2.153,650,1.333,651,1.333,652,2.708,653,2.153,654,1.333,655,2.153,656,2.153,657,2.153,658,1.333,659,1.065,660,1.333,661,1.333,662,1.065,663,1.333,664,1.333,665,1.333,666,1.333,667,1.333,668,1.333,669,1.333,670,1.333,671,1.333,672,1.333,673,1.333,674,1.333,675,1.333,676,2.153,677,1.333,678,1.333,679,1.333,680,1.333,681,3.108,682,1.333,683,1.333,684,1.333,685,1.333,686,1.333,687,1.333,688,1.333,689,2.708,690,1.333,691,1.333,692,1.333,693,1.333,694,2.153,695,1.333,696,1.333,697,1.333,698,1.333,699,1.333,700,1.333,701,1.333,702,1.333,703,1.333,704,2.153,705,1.333,706,1.333,707,1.333,708,1.333,709,1.333,710,1.333,711,1.333,712,1.333,713,1.333,714,1.333,715,1.333,716,3.994,717,2.153,718,1.333,719,1.333,720,1.333,721,1.333,722,1.333,723,1.333,724,1.333,725,1.333,726,1.333,727,1.333,728,1.065,729,1.333,730,1.333,731,1.333,732,1.333,733,1.065,734,3.647,735,2.153,736,1.333,737,2.708,738,1.333,739,1.333,740,1.333,741,1.333,742,1.333,743,2.708,744,1.333,745,1.333,746,1.333,747,1.333,748,2.708,749,1.333,750,1.333,751,1.333,752,1.333,753,1.333,754,1.333,755,1.333,756,1.333,757,1.333,758,2.153,759,1.333,760,1.333,761,1.333,762,1.333,763,1.333,764,1.333,765,1.333,766,1.333,767,1.333,768,1.065,769,2.153,770,2.153,771,1.333,772,1.333,773,1.333,774,1.333,775,2.153,776,1.333,777,1.333,778,1.333,779,1.333,780,2.153,781,1.333,782,1.333,783,1.333,784,1.333,785,1.333,786,1.333,787,1.333,788,1.333,789,1.333,790,1.333,791,1.333,792,1.333,793,2.153,794,1.333,795,1.333,796,1.333,797,1.333,798,1.333,799,1.333,800,1.333,801,1.333,802,1.333,803,1.333,804,1.72,805,1.72,806,1.333,807,1.333,808,1.333,809,1.333,810,1.065,811,1.065,812,1.065,813,1.333,814,1.72]],["title/license.html",[557,1.515,558,1.515,621,1.515]],["body/license.html",[7,0.553,52,1.062,64,0.044,76,2.233,239,0.044,240,0.044,290,2.791,480,2.677,513,1.901,607,2.677,610,2.677,621,2.233,630,2.677,659,3.651,733,2.677,768,3.347,804,2.677,805,2.677,810,3.651,811,2.677,812,2.677,814,3.347,815,4.189,816,3.352,817,3.352,818,3.352,819,3.352,820,4.189,821,3.352,822,4.788,823,5.201,824,3.352,825,4.189,826,3.352,827,4.57,828,4.189,829,3.352,830,3.352,831,3.352,832,3.352,833,3.352,834,3.352,835,3.352,836,3.352,837,3.352,838,3.352,839,3.352,840,3.352,841,4.189,842,3.352,843,3.352,844,4.189,845,3.352,846,3.352,847,3.352,848,3.352,849,3.352,850,3.352,851,3.352,852,3.352,853,3.352,854,3.352,855,3.352,856,3.352,857,3.352,858,3.352,859,3.352,860,3.352,861,3.352,862,3.352,863,3.352]],["title/modules.html",[505,1.537]],["body/modules.html",[64,0.05,239,0.05,240,0.05,505,1.756,506,2.029,596,3.32,662,3.32,864,4.156,865,4.156]],["title/overview.html",[866,2.905]],["body/overview.html",[0,0.695,1,1.886,52,1.113,64,0.055,118,1.485,132,1.716,133,0.579,180,2.807,206,1.993,224,1.485,231,1.886,233,1.886,235,1.886,239,0.045,240,0.045,481,1.113,505,1.823,506,2.617,507,1.716,508,2.341,509,2.807,510,2.807,511,2.807,512,3.446,513,1.993,728,2.807,866,2.807,867,3.514,868,3.514]],["title/miscellaneous/variables.html",[569,1.29,869,2.581]],["body/miscellaneous/variables.html",[8,2.603,15,1.304,21,0.644,26,0.89,58,3.288,64,0.056,66,1.124,69,2.773,70,2.386,71,2.01,89,1.848,135,3.604,136,2.141,137,2.603,138,3.006,139,3.288,140,2.603,141,2.603,142,3.288,143,2.603,144,3.604,145,2.603,146,3.604,147,2.603,148,2.603,239,0.043,240,0.043,276,2.335,288,1.507,324,2.171,326,2.171,328,2.171,331,2.171,441,2.603,442,3.288,465,3.604,486,2.335,487,2.603,490,2.603,492,2.603,493,2.603,497,2.603,503,3.006,504,2.603,514,2.603,515,3.288,516,3.288,543,3.604,544,2.603,569,1.848,869,2.603,870,3.258,871,3.258,872,4.116,873,3.258]]],"invertedIndex":[["",{"_index":64,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":138,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":180,"title":{},"body":{"components/AuthComponent.html":{},"overview.html":{}}}],["2",{"_index":728,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.2.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":812,"title":{},"body":{"index.html":{},"license.html":{}}}],["25",{"_index":216,"title":{},"body":{"components/AuthComponent.html":{}}}],["28.3.18",{"_index":502,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["3",{"_index":868,"title":{},"body":{"overview.html":{}}}],["3.1.18",{"_index":406,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["4",{"_index":867,"title":{},"body":{"overview.html":{}}}],["4.7.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":370,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["6",{"_index":212,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["6,14}[0",{"_index":148,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["6.0.7",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":144,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["9]{1,3",{"_index":140,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["9]{1,3}\\\\.[0",{"_index":139,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["9]{1,3}\\])|(([a",{"_index":141,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["_firestoreservic",{"_index":260,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["_initresetpasswordformgroupbuild",{"_index":43,"title":{},"body":{"components/AuthComponent.html":{}}}],["_initsigninformgroupbuild",{"_index":44,"title":{},"body":{"components/AuthComponent.html":{}}}],["_initsignupformgroupbuild",{"_index":45,"title":{},"body":{"components/AuthComponent.html":{}}}],["abil",{"_index":697,"title":{},"body":{"index.html":{}}}],["abov",{"_index":733,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrol",{"_index":98,"title":{},"body":{"components/AuthComponent.html":{}}}],["access",{"_index":667,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":113,"title":{},"body":{"components/AuthComponent.html":{}}}],["account",{"_index":321,"title":{},"body":{"injectables/AuthProcessService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["action",{"_index":607,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_compon",{"_index":238,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["addit",{"_index":615,"title":{},"body":{"index.html":{}}}],["address",{"_index":205,"title":{},"body":{"components/AuthComponent.html":{},"components/EmailConfirmationComponent.html":{}}}],["adjust",{"_index":739,"title":{},"body":{"index.html":{}}}],["af",{"_index":443,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["alert",{"_index":695,"title":{},"body":{"index.html":{}}}],["altern",{"_index":590,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":834,"title":{},"body":{"license.html":{}}}],["angular",{"_index":579,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":128,"title":{},"body":{"components/AuthComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":532,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["angular/cor",{"_index":120,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":123,"title":{},"body":{"components/AuthComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":527,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{},"index.html":{}}}],["angularfire2/auth",{"_index":124,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["angularfire2/firestor",{"_index":463,"title":{},"body":{"injectables/FirestoreSyncService.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["angularfire2/firestore/interfac",{"_index":464,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["angularfireauth",{"_index":59,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{}}}],["angularfireauthmodul",{"_index":533,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["angularfirestor",{"_index":449,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["angularfirestorecollect",{"_index":459,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["angularfirestoredocu",{"_index":455,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["angularfirestoremodul",{"_index":528,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["anonym",{"_index":334,"title":{},"body":{"injectables/AuthProcessService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["anthoni",{"_index":804,"title":{},"body":{"index.html":{},"license.html":{}}}],["anthony.na@hotmail.d",{"_index":727,"title":{},"body":{"index.html":{}}}],["api",{"_index":542,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{}}}],["app",{"_index":619,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":770,"title":{},"body":{"index.html":{}}}],["applic",{"_index":758,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":771,"title":{},"body":{"index.html":{}}}],["appnamefactori",{"_index":548,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["appropri",{"_index":593,"title":{},"body":{"index.html":{}}}],["aris",{"_index":862,"title":{},"body":{"license.html":{}}}],["array",{"_index":155,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["asset",{"_index":617,"title":{},"body":{"index.html":{}}}],["assets/user/${image}.svg",{"_index":404,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["associ",{"_index":824,"title":{},"body":{"license.html":{}}}],["async",{"_index":248,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["auth",{"_index":15,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["auth.component.html",{"_index":20,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":18,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.providers.component.html",{"_index":418,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["auth.providers.component.scss",{"_index":417,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["authcompon",{"_index":1,"title":{"components/AuthComponent.html":{}},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"overview.html":{}}}],["authent",{"_index":287,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["authenticationerror",{"_index":24,"title":{},"body":{"components/AuthComponent.html":{}}}],["authmethod",{"_index":504,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["authnexturl",{"_index":488,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["author",{"_index":853,"title":{},"body":{"license.html":{}}}],["authprocess",{"_index":25,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{}}}],["authprocess.onerroremitt",{"_index":162,"title":{},"body":{"components/AuthComponent.html":{}}}],["authprocess.onsuccessemitt",{"_index":160,"title":{},"body":{"components/AuthComponent.html":{}}}],["authprocessservic",{"_index":60,"title":{"injectables/AuthProcessService.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["authprovid",{"_index":26,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authprovider.al",{"_index":74,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{}}}],["authprovider.anonym",{"_index":348,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["authprovider.emailandpassword",{"_index":352,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["authprovider.facebook",{"_index":356,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["authprovider.github",{"_index":358,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["authprovider.googl",{"_index":354,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["authprovider.twitt",{"_index":357,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["authproviderscompon",{"_index":231,"title":{"components/AuthProvidersComponent.html":{}},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"overview.html":{}}}],["auto",{"_index":720,"title":{},"body":{"index.html":{}}}],["autocomplet",{"_index":801,"title":{},"body":{"index.html":{}}}],["automat",{"_index":705,"title":{},"body":{"index.html":{}}}],["avail",{"_index":361,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["await",{"_index":349,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["awesom",{"_index":567,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["back",{"_index":439,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["bar",{"_index":237,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["bar.compon",{"_index":539,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["bar.component.html",{"_index":556,"title":{},"body":{"components/ProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":555,"title":{},"body":{"components/ProgressBarComponent.html":{}}}],["bar.component.t",{"_index":554,"title":{},"body":{"components/ProgressBarComponent.html":{}}}],["bar/progress",{"_index":538,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{}}}],["base",{"_index":688,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":311,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["boostrap",{"_index":664,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"components/AuthComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap';th",{"_index":754,"title":{},"body":{"index.html":{}}}],["bootstrap.git",{"_index":779,"title":{},"body":{"index.html":{}}}],["bootstrap.umd.j",{"_index":751,"title":{},"body":{"index.html":{}}}],["bootstrap/bundles/@firebaseui/ng",{"_index":750,"title":{},"body":{"index.html":{}}}],["bootstrap/ng",{"_index":131,"title":{},"body":{"components/AuthComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{}}}],["break",{"_index":351,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["brows",{"_index":662,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":864,"title":{},"body":{"modules.html":{}}}],["buildto",{"_index":792,"title":{},"body":{"index.html":{}}}],["built",{"_index":583,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":742,"title":{},"body":{"index.html":{}}}],["button",{"_index":711,"title":{},"body":{"index.html":{}}}],["c",{"_index":811,"title":{},"body":{"index.html":{},"license.html":{}}}],["case",{"_index":347,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["catch",{"_index":363,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["catch((error",{"_index":342,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["cd",{"_index":784,"title":{},"body":{"index.html":{}}}],["chang",{"_index":677,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":559,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":213,"title":{},"body":{"components/AuthComponent.html":{}}}],["charg",{"_index":819,"title":{},"body":{"license.html":{}}}],["chat",{"_index":806,"title":{},"body":{"index.html":{}}}],["check",{"_index":208,"title":{},"body":{"components/AuthComponent.html":{},"components/EmailConfirmationComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["claim",{"_index":856,"title":{},"body":{"license.html":{}}}],["class",{"_index":149,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"index.html":{}}}],["cli",{"_index":690,"title":{},"body":{"index.html":{}}}],["click",{"_index":436,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["client",{"_index":701,"title":{},"body":{"index.html":{}}}],["clone",{"_index":775,"title":{},"body":{"index.html":{}}}],["cluster_ngbauthfirebaseuimodul",{"_index":509,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"overview.html":{}}}],["cluster_ngbauthfirebaseuimodule_declar",{"_index":510,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"overview.html":{}}}],["cluster_ngbauthfirebaseuimodule_export",{"_index":511,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"overview.html":{}}}],["code",{"_index":766,"title":{},"body":{"index.html":{}}}],["collect",{"_index":465,"title":{},"body":{"injectables/FirestoreSyncService.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":114,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["column",{"_index":427,"title":{},"body":{"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["commonmodul",{"_index":517,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["compon",{"_index":0,"title":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":229,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["components/auth/auth.compon",{"_index":530,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["components/email",{"_index":535,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["components/enum",{"_index":322,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["components/progress",{"_index":537,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["components/providers/auth.providers.compon",{"_index":540,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["concept",{"_index":670,"title":{},"body":{"index.html":{}}}],["condit",{"_index":840,"title":{},"body":{"license.html":{}}}],["config",{"_index":549,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{}}}],["configfactori",{"_index":551,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["configur",{"_index":636,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":300,"title":{},"body":{"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{}}}],["confirmation'},{'nam",{"_index":234,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["confirmation.compon",{"_index":536,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["confirmation.component.html",{"_index":432,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":431,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["confirmation.component.t",{"_index":430,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["confirmation.component.ts:11",{"_index":433,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["confirmation.component.ts:16",{"_index":434,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["confirmation/email",{"_index":429,"title":{},"body":{"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["connect",{"_index":863,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":366,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["console.error(error",{"_index":415,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["console.log('email",{"_index":341,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["console.log('emailconfirmations",{"_index":387,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["console.log('on",{"_index":474,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["console.log('onsignup",{"_index":375,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["console.log('passwordresetemail",{"_index":173,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('sign",{"_index":407,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["const",{"_index":134,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{}}}],["constructor(@inject(platform_id",{"_index":158,"title":{},"body":{"components/AuthComponent.html":{}}}],["constructor(af",{"_index":448,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["constructor(auth",{"_index":259,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["constructor(authprocess",{"_index":420,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["constructor(platformid",{"_index":57,"title":{},"body":{"components/AuthComponent.html":{}}}],["constructor(publ",{"_index":337,"title":{},"body":{"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"injectables/FirestoreSyncService.html":{}}}],["contact",{"_index":589,"title":{},"body":{"index.html":{}}}],["content",{"_index":601,"title":{},"body":{"index.html":{}}}],["continu",{"_index":222,"title":{},"body":{"components/AuthComponent.html":{}}}],["contract",{"_index":859,"title":{},"body":{"license.html":{}}}],["copi",{"_index":822,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["creat",{"_index":689,"title":{},"body":{"index.html":{}}}],["current",{"_index":714,"title":{},"body":{"index.html":{}}}],["d.t",{"_index":790,"title":{},"body":{"index.html":{}}}],["damag",{"_index":857,"title":{},"body":{"license.html":{}}}],["danger",{"_index":679,"title":{},"body":{"index.html":{}}}],["dark",{"_index":684,"title":{},"body":{"index.html":{}}}],["data",{"_index":475,"title":{},"body":{"injectables/FirestoreSyncService.html":{},"index.html":{}}}],["deal",{"_index":825,"title":{},"body":{"license.html":{}}}],["declar",{"_index":508,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":110,"title":{},"body":{"components/AuthComponent.html":{}}}],["default",{"_index":69,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultauthfirebaseuiconfig",{"_index":503,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":61,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["delet",{"_index":629,"title":{},"body":{"index.html":{}}}],["deleteaccount",{"_index":249,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["deleteuserdata",{"_index":444,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["deleteuserdata(uid",{"_index":451,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["demo",{"_index":608,"title":{},"body":{"index.html":{}}}],["depend",{"_index":507,"title":{"dependencies.html":{}},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":282,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["design",{"_index":668,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":671,"title":{},"body":{"index.html":{}}}],["develop",{"_index":584,"title":{},"body":{"index.html":{}}}],["differ",{"_index":761,"title":{},"body":{"index.html":{}}}],["direct",{"_index":227,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["directori",{"_index":783,"title":{},"body":{"index.html":{}}}],["display",{"_index":632,"title":{},"body":{"index.html":{}}}],["display/edit",{"_index":713,"title":{},"body":{"index.html":{}}}],["displaynam",{"_index":381,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["distribut",{"_index":832,"title":{},"body":{"license.html":{}}}],["document",{"_index":610,"title":{},"body":{"index.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["drop",{"_index":803,"title":{},"body":{"index.html":{}}}],["durat",{"_index":369,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["e",{"_index":200,"title":{},"body":{"components/AuthComponent.html":{},"components/EmailConfirmationComponent.html":{}}}],["e.g",{"_index":682,"title":{},"body":{"index.html":{}}}],["easi",{"_index":653,"title":{},"body":{"index.html":{}}}],["easili",{"_index":708,"title":{},"body":{"index.html":{}}}],["edit",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["element",{"_index":226,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["email",{"_index":194,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"components/ProgressBarComponent.html":{},"index.html":{}}}],["email_regex",{"_index":135,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["emailandpassword",{"_index":335,"title":{},"body":{"injectables/AuthProcessService.html":{},"miscellaneous/enumerations.html":{}}}],["emailconfirmationcompon",{"_index":233,"title":{"components/EmailConfirmationComponent.html":{}},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"overview.html":{}}}],["emailconfirmations",{"_index":243,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["emailtoconfirm",{"_index":244,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["end",{"_index":765,"title":{},"body":{"index.html":{}}}],["enter",{"_index":204,"title":{},"body":{"components/AuthComponent.html":{}}}],["enum",{"_index":333,"title":{},"body":{"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{}}}],["enumer",{"_index":570,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":364,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["error",{"_index":271,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["error(`${authprovider[provid",{"_index":360,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["even",{"_index":698,"title":{},"body":{"index.html":{}}}],["event",{"_index":76,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{},"license.html":{}}}],["eventemitt",{"_index":314,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["exact",{"_index":759,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":609,"title":{},"body":{"index.html":{}}}],["export",{"_index":133,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":846,"title":{},"body":{"license.html":{}}}],["extensions/combin",{"_index":802,"title":{},"body":{"index.html":{}}}],["extensions/contact",{"_index":797,"title":{},"body":{"index.html":{}}}],["extensions/faq",{"_index":798,"title":{},"body":{"index.html":{}}}],["extensions/googl",{"_index":800,"title":{},"body":{"index.html":{}}}],["extensions/jumbotron",{"_index":799,"title":{},"body":{"index.html":{}}}],["extensions/pag",{"_index":796,"title":{},"body":{"index.html":{}}}],["extensions/password",{"_index":795,"title":{},"body":{"index.html":{}}}],["facebook",{"_index":152,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["facebookauthprovid",{"_index":326,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":89,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["favorit",{"_index":637,"title":{},"body":{"index.html":{}}}],["featur",{"_index":308,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["feedback",{"_index":694,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"index.html":{},"license.html":{}}}],["final",{"_index":372,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["fire",{"_index":704,"title":{},"body":{"index.html":{}}}],["firebas",{"_index":288,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth.authprovid",{"_index":495,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":327,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["firebase.auth.githubauthprovid",{"_index":332,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":325,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":329,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["firebase.auth.usercredenti",{"_index":330,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["firebase.firestore.fieldvalue.servertimestamp",{"_index":468,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["firebase.us",{"_index":323,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["firebaseappconfig",{"_index":524,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["firebasenameorconfigtoken",{"_index":525,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["firebaseoptionstoken",{"_index":526,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["firebaseui",{"_index":16,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{},"index.html":{}}}],["firebaseui'},{'nam",{"_index":230,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["firebaseui/ion",{"_index":649,"title":{},"body":{"index.html":{}}}],["firebaseui/ng",{"_index":578,"title":{},"body":{"index.html":{}}}],["firestor",{"_index":309,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"index.html":{}}}],["firestoresyncservic",{"_index":261,"title":{"injectables/FirestoreSyncService.html":{}},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["first",{"_index":220,"title":{},"body":{"components/AuthComponent.html":{}}}],["fit",{"_index":849,"title":{},"body":{"license.html":{}}}],["follow",{"_index":839,"title":{},"body":{"license.html":{}}}],["font",{"_index":566,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["forget",{"_index":211,"title":{},"body":{"components/AuthComponent.html":{}}}],["forgot",{"_index":218,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["forgot/reset",{"_index":628,"title":{},"body":{"index.html":{}}}],["form",{"_index":652,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":121,"title":{},"body":{"components/AuthComponent.html":{}}}],["formgroup",{"_index":99,"title":{},"body":{"components/AuthComponent.html":{}}}],["formsmodul",{"_index":521,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["forroot(configfactori",{"_index":547,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["free",{"_index":818,"title":{},"body":{"license.html":{}}}],["friendli",{"_index":644,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":837,"title":{},"body":{"license.html":{}}}],["further",{"_index":660,"title":{},"body":{"index.html":{}}}],["gener",{"_index":285,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["get",{"_index":557,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getcolor",{"_index":115,"title":{},"body":{"components/AuthComponent.html":{}}}],["getphotopath",{"_index":250,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["getphotopath(imag",{"_index":265,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["getuserdocrefbyuid",{"_index":445,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["getuserdocrefbyuid(uid",{"_index":453,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["getuserdocrefbyuid(user.uid",{"_index":377,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["getuserphotourl",{"_index":251,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["getuserscollectionref",{"_index":446,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["getuserscollectionref(queryfn",{"_index":456,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["ghost",{"_index":700,"title":{},"body":{"index.html":{}}}],["gift_heart",{"_index":665,"title":{},"body":{"index.html":{}}}],["git",{"_index":777,"title":{},"body":{"index.html":{}}}],["github",{"_index":154,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["githubauthprovid",{"_index":331,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["gitter",{"_index":807,"title":{},"body":{"index.html":{}}}],["global",{"_index":781,"title":{},"body":{"index.html":{}}}],["go",{"_index":438,"title":{},"body":{"components/EmailConfirmationComponent.html":{},"index.html":{}}}],["goog",{"_index":712,"title":{},"body":{"index.html":{}}}],["googl",{"_index":151,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["googleauthprovid",{"_index":324,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["grant",{"_index":817,"title":{},"body":{"license.html":{}}}],["guest",{"_index":223,"title":{},"body":{"components/AuthComponent.html":{}}}],["guesten",{"_index":51,"title":{},"body":{"components/AuthComponent.html":{}}}],["gulp",{"_index":780,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":252,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["handleerror(error",{"_index":269,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["handlesuccess",{"_index":253,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["handlesuccess(usercredenti",{"_index":272,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["heart",{"_index":585,"title":{},"body":{"index.html":{}}}],["heavy_check_mark",{"_index":622,"title":{},"body":{"index.html":{}}}],["help",{"_index":808,"title":{},"body":{"index.html":{}}}],["here",{"_index":595,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":816,"title":{},"body":{"license.html":{}}}],["hesit",{"_index":588,"title":{},"body":{"index.html":{}}}],["higher",{"_index":729,"title":{},"body":{"index.html":{}}}],["holder",{"_index":854,"title":{},"body":{"license.html":{}}}],["host",{"_index":788,"title":{},"body":{"index.html":{}}}],["html",{"_index":225,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["http://localhost:4200",{"_index":789,"title":{},"body":{"index.html":{}}}],["httpclientmodul",{"_index":531,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["https://github.com/firebaseui/ng",{"_index":778,"title":{},"body":{"index.html":{}}}],["i.module.t",{"_index":516,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["i18n",{"_index":646,"title":{},"body":{"index.html":{}}}],["icon",{"_index":616,"title":{},"body":{"index.html":{}}}],["imag",{"_index":267,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{}}}],["impli",{"_index":847,"title":{},"body":{"license.html":{}}}],["import",{"_index":117,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"index.html":{}}}],["in/up",{"_index":625,"title":{},"body":{"index.html":{}}}],["inbox",{"_index":435,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["incl",{"_index":633,"title":{},"body":{"index.html":{}}}],["includ",{"_index":827,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":626,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{}}}],["inject",{"_index":118,"title":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":518,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["injectiontoken('ngbootstrapauthfirebaseuiconfig",{"_index":544,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":50,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{}}}],["instal",{"_index":613,"title":{},"body":{"index.html":{}}}],["instruct",{"_index":209,"title":{},"body":{"components/AuthComponent.html":{}}}],["integr",{"_index":654,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":481,"title":{"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}},"body":{"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"overview.html":{}}}],["interfaces/config.interfac",{"_index":529,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["interfaces/main.interfac",{"_index":319,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["internation",{"_index":645,"title":{},"body":{"index.html":{}}}],["interrobang",{"_index":663,"title":{},"body":{"index.html":{}}}],["ionic/cordova",{"_index":648,"title":{},"body":{"index.html":{}}}],["isigninprocess",{"_index":317,"title":{"interfaces/ISignInProcess.html":{}},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["isignupprocess",{"_index":318,"title":{"interfaces/ISignUpProcess.html":{}},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["isload",{"_index":245,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["isplatformbrows",{"_index":127,"title":{},"body":{"components/AuthComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":163,"title":{},"body":{"components/AuthComponent.html":{}}}],["issu",{"_index":594,"title":{},"body":{"index.html":{}}}],["js",{"_index":748,"title":{},"body":{"index.html":{}}}],["kind",{"_index":845,"title":{},"body":{"license.html":{}}}],["languagecod",{"_index":489,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["layout",{"_index":419,"title":{},"body":{"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["layout.row",{"_index":422,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["legend",{"_index":224,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"overview.html":{}}}],["level",{"_index":764,"title":{},"body":{"index.html":{}}}],["liabil",{"_index":858,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":855,"title":{},"body":{"license.html":{}}}],["librari",{"_index":581,"title":{},"body":{"index.html":{}}}],["library'",{"_index":605,"title":{},"body":{"index.html":{}}}],["licens",{"_index":621,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":683,"title":{},"body":{"index.html":{}}}],["limit",{"_index":828,"title":{},"body":{"license.html":{}}}],["link",{"_index":437,"title":{},"body":{"components/EmailConfirmationComponent.html":{},"index.html":{}}}],["lint",{"_index":793,"title":{},"body":{"index.html":{}}}],["lipstick",{"_index":674,"title":{},"body":{"index.html":{}}}],["list",{"_index":757,"title":{},"body":{"index.html":{}}}],["loader",{"_index":746,"title":{},"body":{"index.html":{}}}],["local",{"_index":620,"title":{},"body":{"index.html":{}}}],["log",{"_index":217,"title":{},"body":{"components/AuthComponent.html":{}}}],["login",{"_index":476,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["long",{"_index":214,"title":{},"body":{"components/AuthComponent.html":{}}}],["longer",{"_index":215,"title":{},"body":{"components/AuthComponent.html":{}}}],["look",{"_index":747,"title":{},"body":{"index.html":{}}}],["loudspeak",{"_index":599,"title":{},"body":{"index.html":{}}}],["mail",{"_index":201,"title":{},"body":{"components/AuthComponent.html":{},"components/EmailConfirmationComponent.html":{}}}],["main",{"_index":753,"title":{},"body":{"index.html":{}}}],["map",{"_index":743,"title":{},"body":{"index.html":{}}}],["match",{"_index":240,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":716,"title":{},"body":{"index.html":{}}}],["mechan",{"_index":286,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["merchant",{"_index":848,"title":{},"body":{"license.html":{}}}],["merg",{"_index":480,"title":{},"body":{"injectables/FirestoreSyncService.html":{},"license.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["metadata.json",{"_index":791,"title":{},"body":{"index.html":{}}}],["method",{"_index":41,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"index.html":{}}}],["miscellan",{"_index":569,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":814,"title":{},"body":{"index.html":{},"license.html":{}}}],["mobil",{"_index":672,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":830,"title":{},"body":{"license.html":{}}}],["modul",{"_index":505,"title":{"modules/NgbAuthFirebaseUIModule.html":{},"modules.html":{}},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["module'",{"_index":541,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["modulewithprovid",{"_index":519,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["more",{"_index":642,"title":{},"body":{"index.html":{}}}],["muscl",{"_index":706,"title":{},"body":{"index.html":{}}}],["naha",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"components/ProgressBarComponent.html":{},"index.html":{}}}],["navig",{"_index":782,"title":{},"body":{"index.html":{}}}],["need",{"_index":681,"title":{},"body":{"index.html":{}}}],["new",{"_index":136,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":130,"title":{},"body":{"components/AuthComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngb",{"_index":14,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["ngbauthfirebaseuimodul",{"_index":506,"title":{"modules/NgbAuthFirebaseUIModule.html":{}},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngbauthfirebaseuimodule.forroot",{"_index":769,"title":{},"body":{"index.html":{}}}],["ngbmodul",{"_index":534,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["ngbmodule.forroot",{"_index":545,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["ngbootstrapauthfirebaseuiconfig",{"_index":486,"title":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["ngbootstrapauthfirebaseuiconfigtoken",{"_index":543,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["ngbtabset",{"_index":109,"title":{},"body":{"components/AuthComponent.html":{}}}],["ngmodul",{"_index":520,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":46,"title":{},"body":{"components/AuthComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AuthComponent.html":{},"components/EmailConfirmationComponent.html":{}}}],["ngx",{"_index":602,"title":{},"body":{"index.html":{}}}],["node_modules/@firebaseui/ng",{"_index":749,"title":{},"body":{"index.html":{}}}],["none",{"_index":575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfring",{"_index":852,"title":{},"body":{"license.html":{}}}],["note:if",{"_index":738,"title":{},"body":{"index.html":{}}}],["notic",{"_index":768,"title":{},"body":{"index.html":{},"license.html":{}}}],["now",{"_index":735,"title":{},"body":{"index.html":{}}}],["npm",{"_index":734,"title":{},"body":{"index.html":{}}}],["null",{"_index":397,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["number",{"_index":635,"title":{},"body":{"index.html":{}}}],["object",{"_index":58,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["obtain",{"_index":821,"title":{},"body":{"license.html":{}}}],["occur",{"_index":696,"title":{},"body":{"index.html":{}}}],["ok",{"_index":368,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["on",{"_index":156,"title":{},"body":{"components/AuthComponent.html":{}}}],["onc",{"_index":752,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"components/AuthComponent.html":{}}}],["onerror",{"_index":54,"title":{},"body":{"components/AuthComponent.html":{}}}],["onerroremitt",{"_index":246,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["onerrorsubscript",{"_index":27,"title":{},"body":{"components/AuthComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AuthComponent.html":{},"components/EmailConfirmationComponent.html":{}}}],["onlyemailpasswordauth",{"_index":490,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["onsuccess",{"_index":55,"title":{},"body":{"components/AuthComponent.html":{}}}],["onsuccessemitt",{"_index":247,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["open",{"_index":592,"title":{},"body":{"index.html":{}}}],["option",{"_index":67,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"index.html":{}}}],["othercompon",{"_index":773,"title":{},"body":{"index.html":{}}}],["othermodul",{"_index":774,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":861,"title":{},"body":{"license.html":{}}}],["out",{"_index":513,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outif(issu",{"_index":725,"title":{},"body":{"index.html":{}}}],["output",{"_index":53,"title":{},"body":{"components/AuthComponent.html":{}}}],["overview",{"_index":866,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":560,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":440,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["param",{"_index":338,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["paramet",{"_index":63,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["parseuserinfo",{"_index":254,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["parseuserinfo(us",{"_index":275,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["part",{"_index":756,"title":{},"body":{"index.html":{}}}],["particular",{"_index":850,"title":{},"body":{"license.html":{}}}],["passreset",{"_index":28,"title":{},"body":{"components/AuthComponent.html":{}}}],["password",{"_index":196,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"index.html":{}}}],["password'",{"_index":715,"title":{},"body":{"index.html":{}}}],["passwordresetwish",{"_index":29,"title":{},"body":{"components/AuthComponent.html":{}}}],["peer",{"_index":612,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":815,"title":{},"body":{"license.html":{}}}],["permit",{"_index":836,"title":{},"body":{"license.html":{}}}],["person",{"_index":820,"title":{},"body":{"license.html":{}}}],["phone",{"_index":634,"title":{},"body":{"index.html":{}}}],["phone_number_regex",{"_index":146,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["phonenumb",{"_index":336,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["photo",{"_index":306,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["photourl",{"_index":302,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["pick",{"_index":675,"title":{},"body":{"index.html":{}}}],["pictur",{"_index":719,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":119,"title":{},"body":{"components/AuthComponent.html":{}}}],["platformid",{"_index":68,"title":{},"body":{"components/AuthComponent.html":{}}}],["pleas",{"_index":203,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["point",{"_index":740,"title":{},"body":{"index.html":{}}}],["polici",{"_index":501,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["popup",{"_index":496,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["portion",{"_index":843,"title":{},"body":{"license.html":{}}}],["power",{"_index":582,"title":{},"body":{"index.html":{}}}],["ppurl",{"_index":491,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["pr",{"_index":591,"title":{},"body":{"index.html":{}}}],["primari",{"_index":172,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["privaci",{"_index":500,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["privat",{"_index":42,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"index.html":{}}}],["process",{"_index":606,"title":{},"body":{"index.html":{}}}],["process.servic",{"_index":126,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["process.service.t",{"_index":242,"title":{},"body":{"injectables/AuthProcessService.html":{},"miscellaneous/enumerations.html":{}}}],["process.service.ts:125",{"_index":297,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:163",{"_index":303,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:167",{"_index":263,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:171",{"_index":277,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:182",{"_index":268,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:197",{"_index":266,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:201",{"_index":295,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:205",{"_index":274,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:217",{"_index":270,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:31",{"_index":316,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:32",{"_index":315,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:33",{"_index":313,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:34",{"_index":312,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:35",{"_index":262,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:37",{"_index":310,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:47",{"_index":280,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["process.service.ts:71",{"_index":284,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["profil",{"_index":305,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["progress",{"_index":236,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{},"index.html":{}}}],["progressbarcompon",{"_index":235,"title":{"components/ProgressBarComponent.html":{}},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"overview.html":{}}}],["project",{"_index":289,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["project/app",{"_index":693,"title":{},"body":{"index.html":{}}}],["promis",{"_index":264,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["properti",{"_index":22,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["provid",{"_index":52,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"interfaces/ISignInProcess.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providerid",{"_index":394,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["providers'},{'nam",{"_index":232,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"injectables/FirestoreSyncService.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["publish",{"_index":831,"title":{},"body":{"license.html":{}}}],["punch",{"_index":809,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":851,"title":{},"body":{"license.html":{}}}],["queryfn",{"_index":457,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["question",{"_index":586,"title":{},"body":{"index.html":{}}}],["rc.11",{"_index":564,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["reactiveformsmodul",{"_index":522,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["read",{"_index":641,"title":{},"body":{"index.html":{}}}],["real",{"_index":650,"title":{},"body":{"index.html":{}}}],["recov",{"_index":707,"title":{},"body":{"index.html":{}}}],["recycl",{"_index":691,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":497,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["regexp(/^\\+(?:[0",{"_index":147,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["regexp(['^(([^<>()[\\\\]\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\.,;:\\\\",{"_index":137,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["regist",{"_index":219,"title":{},"body":{"components/AuthComponent.html":{}}}],["remain",{"_index":755,"title":{},"body":{"index.html":{}}}],["remov",{"_index":577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["render",{"_index":657,"title":{},"body":{"index.html":{}}}],["repo",{"_index":776,"title":{},"body":{"index.html":{}}}],["request",{"_index":207,"title":{},"body":{"components/AuthComponent.html":{}}}],["requir",{"_index":202,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["reset",{"_index":206,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":48,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{}}}],["resetpassword(email",{"_index":279,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["resetpasswordemailformcontrol",{"_index":30,"title":{},"body":{"components/AuthComponent.html":{}}}],["resetpasswordformgroup",{"_index":31,"title":{},"body":{"components/AuthComponent.html":{}}}],["respons",{"_index":666,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":826,"title":{},"body":{"license.html":{}}}],["result",{"_index":239,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":80,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["reusabl",{"_index":692,"title":{},"body":{"index.html":{}}}],["right",{"_index":829,"title":{},"body":{"license.html":{}}}],["root",{"_index":762,"title":{},"body":{"index.html":{}}}],["row",{"_index":426,"title":{},"body":{"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":618,"title":{},"body":{"index.html":{}}}],["run/start/serv",{"_index":785,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":638,"title":{},"body":{"index.html":{}}}],["rxjs/internal/subscript",{"_index":129,"title":{},"body":{"components/AuthComponent.html":{}}}],["safari",{"_index":661,"title":{},"body":{"index.html":{}}}],["save",{"_index":736,"title":{},"body":{"index.html":{}}}],["screenshot",{"_index":611,"title":{},"body":{"index.html":{}}}],["scss",{"_index":685,"title":{},"body":{"index.html":{}}}],["secondari",{"_index":678,"title":{},"body":{"index.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["selectresetpasswordtab",{"_index":49,"title":{},"body":{"components/AuthComponent.html":{}}}],["sell",{"_index":835,"title":{},"body":{"license.html":{}}}],["send",{"_index":717,"title":{},"body":{"index.html":{}}}],["sent",{"_index":174,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{}}}],["serv",{"_index":787,"title":{},"body":{"index.html":{}}}],["server",{"_index":655,"title":{},"body":{"index.html":{}}}],["servic",{"_index":499,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["services/auth",{"_index":125,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["services/firestor",{"_index":523,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["set",{"_index":378,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["settimeout",{"_index":178,"title":{},"body":{"components/AuthComponent.html":{}}}],["shall",{"_index":841,"title":{},"body":{"license.html":{}}}],["share",{"_index":598,"title":{},"body":{"index.html":{}}}],["ship",{"_index":686,"title":{},"body":{"index.html":{}}}],["short",{"_index":221,"title":{},"body":{"components/AuthComponent.html":{}}}],["side",{"_index":656,"title":{},"body":{"index.html":{}}}],["siginpasswordformcontrol",{"_index":32,"title":{},"body":{"components/AuthComponent.html":{}}}],["sign",{"_index":210,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{},"index.html":{}}}],["signinemailformcontrol",{"_index":33,"title":{},"body":{"components/AuthComponent.html":{}}}],["signinformgroup",{"_index":34,"title":{},"body":{"components/AuthComponent.html":{}}}],["signinresult",{"_index":345,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["signinwith",{"_index":255,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{}}}],["signinwith(provid",{"_index":283,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["signinwithphonenumb",{"_index":256,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["signup",{"_index":257,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignUpProcess.html":{}}}],["signup(nam",{"_index":296,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["signupformgroup",{"_index":35,"title":{},"body":{"components/AuthComponent.html":{}}}],["sigupemailformcontrol",{"_index":36,"title":{},"body":{"components/AuthComponent.html":{}}}],["sigupnameformcontrol",{"_index":37,"title":{},"body":{"components/AuthComponent.html":{}}}],["siguppasswordconfirmationformcontrol",{"_index":38,"title":{},"body":{"components/AuthComponent.html":{}}}],["siguppasswordformcontrol",{"_index":39,"title":{},"body":{"components/AuthComponent.html":{}}}],["similar",{"_index":767,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":772,"title":{},"body":{"index.html":{}}}],["singl",{"_index":157,"title":{},"body":{"components/AuthComponent.html":{}}}],["slightli",{"_index":760,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":823,"title":{},"body":{"license.html":{}}}],["soon",{"_index":624,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{},"components/ProgressBarComponent.html":{}}}],["spa",{"_index":658,"title":{},"body":{"index.html":{}}}],["src/.../accounts.enum.t",{"_index":571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth",{"_index":572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.component.t",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.providers.component.t",{"_index":573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.interface.t",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firestor",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngb",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/module/components/auth/auth.component.t",{"_index":8,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["src/auth/module/components/auth/auth.component.ts:104",{"_index":82,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:119",{"_index":83,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:141",{"_index":79,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:25",{"_index":112,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:29",{"_index":75,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:32",{"_index":72,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:35",{"_index":78,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:38",{"_index":77,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:40",{"_index":92,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:41",{"_index":97,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:43",{"_index":103,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:44",{"_index":104,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:45",{"_index":100,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:47",{"_index":95,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:48",{"_index":90,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:50",{"_index":96,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:52",{"_index":93,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:54",{"_index":102,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:55",{"_index":101,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:57",{"_index":106,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:58",{"_index":105,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:59",{"_index":108,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:60",{"_index":107,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:61",{"_index":62,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:64",{"_index":88,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:65",{"_index":91,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:71",{"_index":85,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:80",{"_index":84,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:87",{"_index":116,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:91",{"_index":86,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/auth/auth.component.ts:97",{"_index":87,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/auth/module/components/email",{"_index":428,"title":{},"body":{"components/EmailConfirmationComponent.html":{}}}],["src/auth/module/components/enums/accounts.enum.t",{"_index":574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/module/components/progress",{"_index":553,"title":{},"body":{"components/ProgressBarComponent.html":{}}}],["src/auth/module/components/providers/auth.providers.component.t",{"_index":416,"title":{},"body":{"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/module/components/providers/auth.providers.component.ts:18",{"_index":423,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["src/auth/module/components/providers/auth.providers.component.ts:21",{"_index":424,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["src/auth/module/components/providers/auth.providers.component.ts:23",{"_index":421,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["src/auth/module/components/providers/auth.providers.component.ts:25",{"_index":425,"title":{},"body":{"components/AuthProvidersComponent.html":{}}}],["src/auth/module/interfaces/config.interface.t",{"_index":487,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["src/auth/module/interfaces/main.interface.t",{"_index":482,"title":{},"body":{"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{}}}],["src/auth/module/interfaces/main.interface.ts:13",{"_index":484,"title":{},"body":{"interfaces/ISignInProcess.html":{}}}],["src/auth/module/interfaces/main.interface.ts:15",{"_index":483,"title":{},"body":{"interfaces/ISignInProcess.html":{}}}],["src/auth/module/interfaces/main.interface.ts:5",{"_index":485,"title":{},"body":{"interfaces/ISignUpProcess.html":{}}}],["src/auth/module/ngb",{"_index":514,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["src/auth/module/services/auth",{"_index":241,"title":{},"body":{"injectables/AuthProcessService.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/module/services/firestor",{"_index":441,"title":{},"body":{"injectables/FirestoreSyncService.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":710,"title":{},"body":{"index.html":{}}}],["star",{"_index":597,"title":{},"body":{"index.html":{}}}],["start",{"_index":558,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["startor",{"_index":786,"title":{},"body":{"index.html":{}}}],["static",{"_index":546,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["strength",{"_index":627,"title":{},"body":{"index.html":{}}}],["string",{"_index":73,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["subject",{"_index":838,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":833,"title":{},"body":{"license.html":{}}}],["subscript",{"_index":94,"title":{},"body":{"components/AuthComponent.html":{}}}],["substanti",{"_index":842,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":587,"title":{},"body":{"index.html":{}}}],["super",{"_index":687,"title":{},"body":{"index.html":{}}}],["support",{"_index":596,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":865,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":346,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["sync",{"_index":639,"title":{},"body":{"index.html":{}}}],["sync.servic",{"_index":320,"title":{},"body":{"injectables/AuthProcessService.html":{},"modules/NgbAuthFirebaseUIModule.html":{}}}],["sync.service.t",{"_index":442,"title":{},"body":{"injectables/FirestoreSyncService.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:11",{"_index":450,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["sync.service.ts:13",{"_index":462,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["sync.service.ts:21",{"_index":454,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["sync.service.ts:26",{"_index":458,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["sync.service.ts:30",{"_index":452,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["sync.service.ts:36",{"_index":461,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["system",{"_index":745,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":737,"title":{},"body":{"index.html":{}}}],["tab",{"_index":40,"title":{},"body":{"components/AuthComponent.html":{}}}],["tabl",{"_index":600,"title":{},"body":{"index.html":{}}}],["tada",{"_index":709,"title":{},"body":{"index.html":{}}}],["tell",{"_index":744,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["term",{"_index":498,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["test",{"_index":730,"title":{},"body":{"index.html":{}}}],["theme",{"_index":676,"title":{},"body":{"index.html":{}}}],["this._firestoreservic",{"_index":376,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this._firestoreservice.updateuserdata(this.parseuserinfo(usercredential.us",{"_index":408,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this._initresetpasswordformgroupbuild",{"_index":169,"title":{},"body":{"components/AuthComponent.html":{}}}],["this._initsigninformgroupbuild",{"_index":167,"title":{},"body":{"components/AuthComponent.html":{}}}],["this._initsignupformgroupbuild",{"_index":168,"title":{},"body":{"components/AuthComponent.html":{}}}],["this._snackbar.open(`hallo",{"_index":410,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this._snackbar.open(err.messag",{"_index":367,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this._snackbar.open(error.messag",{"_index":414,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.afs.collection(`${collections.us",{"_index":470,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["this.afs.doc(`${collections.users}/${uid",{"_index":469,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["this.afs.firestore.settings({timestampsinsnapshot",{"_index":466,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["this.auth.auth.createuserwithemailandpassword(email",{"_index":373,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.currentus",{"_index":398,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.currentuser.delet",{"_index":391,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.currentuser.updateprofile({displaynam",{"_index":390,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.sendpasswordresetemail(email",{"_index":340,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.signinanonym",{"_index":350,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.signinwithemailandpassword(email",{"_index":353,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.auth.auth.signinwithpopup(new",{"_index":355,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.authenticationerror",{"_index":166,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authprocess.resetpassword(this.resetpasswordemailformcontrol.valu",{"_index":175,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.config.toastmessageonautherror",{"_index":413,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.config.toastmessageonauthsuccess",{"_index":409,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.emailconfirmations",{"_index":386,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.emailtoconfirm",{"_index":388,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.getphotopath(accounts.check",{"_index":400,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.getphotopath(accounts.non",{"_index":403,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.getphotopath(accounts.off",{"_index":402,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.getuserdocrefbyuid(uid",{"_index":472,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["this.getuserdocrefbyuid(user.uid",{"_index":477,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["this.handleerror(err",{"_index":365,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.handlesuccess(signinresult",{"_index":362,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.handlesuccess(usercredenti",{"_index":389,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.isload",{"_index":339,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.onerror",{"_index":161,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.onerror.subscrib",{"_index":165,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.onerroremitter.next(err",{"_index":371,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.onerroremitter.next(error",{"_index":343,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.onerrorsubscript",{"_index":164,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.onerrorsubscription.unsubscrib",{"_index":170,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.onsuccess",{"_index":159,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.onsuccessemitter.next(usercredential.us",{"_index":412,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["this.passreset",{"_index":176,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.passwordresetwish",{"_index":177,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.resetpasswordemailformcontrol",{"_index":199,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.resetpasswordformgroup",{"_index":198,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.siginpasswordformcontrol",{"_index":187,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signinemailformcontrol",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signinformgroup",{"_index":181,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signinformgroup.registercontrol('email",{"_index":182,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signinformgroup.registercontrol('password",{"_index":186,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signupformgroup",{"_index":190,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.sigupemailformcontrol",{"_index":195,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.sigupnameformcontrol",{"_index":191,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.siguppasswordformcontrol",{"_index":197,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.tabs.select('reset_password",{"_index":179,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.updateprofile(nam",{"_index":385,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["throw",{"_index":359,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["time",{"_index":651,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":467,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["toastmessageonautherror",{"_index":492,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["toastmessageonauthsuccess",{"_index":493,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":405,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["top",{"_index":763,"title":{},"body":{"index.html":{}}}],["tort",{"_index":860,"title":{},"body":{"license.html":{}}}],["tosurl",{"_index":494,"title":{},"body":{"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["total",{"_index":699,"title":{},"body":{"index.html":{}}}],["tradit",{"_index":291,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["tri",{"_index":344,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["true",{"_index":71,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":794,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":153,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["twitterauthprovid",{"_index":328,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{},"interfaces/ISignUpProcess.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":515,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":580,"title":{},"body":{"index.html":{}}}],["uid",{"_index":379,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["umd",{"_index":741,"title":{},"body":{"index.html":{}}}],["under",{"_index":813,"title":{},"body":{"index.html":{}}}],["up",{"_index":298,"title":{},"body":{"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{},"index.html":{}}}],["updat",{"_index":304,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["updateprofil",{"_index":258,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["updateprofile(nam",{"_index":301,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["updateuserdata",{"_index":447,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["updateuserdata(us",{"_index":460,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["url",{"_index":307,"title":{},"body":{"injectables/AuthProcessService.html":{},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{}}}],["us",{"_index":290,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":614,"title":{},"body":{"index.html":{}}}],["usefactori",{"_index":552,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["user",{"_index":276,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user'",{"_index":631,"title":{},"body":{"index.html":{}}}],["user'auth",{"_index":640,"title":{},"body":{"index.html":{}}}],["user.displaynam",{"_index":392,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["user.email",{"_index":382,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["user.emailverifi",{"_index":399,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["user.isanonym",{"_index":401,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["user.phonenumb",{"_index":393,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["user.photourl",{"_index":383,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["user.providerdata.length",{"_index":395,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["user.providerdata[0].providerid",{"_index":396,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["user.providerid",{"_index":478,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["user.sendemailverif",{"_index":384,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["user.uid",{"_index":380,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["usercredenti",{"_index":273,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["usercredential.us",{"_index":374,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["usercredential.user.displaynam",{"_index":411,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["userinfo",{"_index":278,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{}}}],["usernam",{"_index":293,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["userref",{"_index":471,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["userref.delet",{"_index":473,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["userref.set(data",{"_index":479,"title":{},"body":{"injectables/FirestoreSyncService.html":{}}}],["usevalu",{"_index":550,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{}}}],["ux/ui",{"_index":669,"title":{},"body":{"index.html":{}}}],["v2",{"_index":643,"title":{},"body":{"index.html":{}}}],["v4.x",{"_index":724,"title":{},"body":{"index.html":{}}}],["v5",{"_index":731,"title":{},"body":{"index.html":{}}}],["v5.0.0",{"_index":722,"title":{},"body":{"index.html":{}}}],["v5.x",{"_index":723,"title":{},"body":{"index.html":{}}}],["v6",{"_index":732,"title":{},"body":{"index.html":{}}}],["v6.x",{"_index":721,"title":{},"body":{"index.html":{}}}],["v7",{"_index":647,"title":{},"body":{"index.html":{}}}],["valid",{"_index":122,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["validators.maxlength(25",{"_index":189,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.maxlength(30",{"_index":193,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.minlength(2",{"_index":192,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.minlength(6",{"_index":188,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.pattern(email_regex",{"_index":185,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.requir",{"_index":184,"title":{},"body":{"components/AuthComponent.html":{}}}],["valu",{"_index":70,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/AuthProvidersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":228,"title":{},"body":{"components/AuthComponent.html":{},"components/AuthProvidersComponent.html":{},"components/EmailConfirmationComponent.html":{},"components/ProgressBarComponent.html":{}}}],["variabl",{"_index":869,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verif",{"_index":718,"title":{},"body":{"index.html":{}}}],["verifi",{"_index":299,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["via",{"_index":281,"title":{},"body":{"injectables/AuthProcessService.html":{},"index.html":{}}}],["view",{"_index":673,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":111,"title":{},"body":{"components/AuthComponent.html":{}}}],["viewchild('tab",{"_index":150,"title":{},"body":{"components/AuthComponent.html":{}}}],["void",{"_index":81,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthProcessService.html":{},"components/EmailConfirmationComponent.html":{}}}],["vs",{"_index":603,"title":{},"body":{"index.html":{}}}],["want",{"_index":702,"title":{},"body":{"index.html":{}}}],["warn",{"_index":171,"title":{},"body":{"components/AuthComponent.html":{}}}],["warranti",{"_index":844,"title":{},"body":{"license.html":{}}}],["way",{"_index":292,"title":{},"body":{"injectables/AuthProcessService.html":{}}}],["web",{"_index":604,"title":{},"body":{"index.html":{}}}],["whenev",{"_index":680,"title":{},"body":{"index.html":{}}}],["whether",{"_index":630,"title":{},"body":{"index.html":{},"license.html":{}}}],["without",{"_index":659,"title":{},"body":{"index.html":{},"license.html":{}}}],["x",{"_index":623,"title":{},"body":{"index.html":{}}}],["ye",{"_index":294,"title":{},"body":{"injectables/AuthProcessService.html":{},"injectables/FirestoreSyncService.html":{},"interfaces/ISignInProcess.html":{}}}],["you_need_more_featur",{"_index":726,"title":{},"body":{"index.html":{}}}],["z",{"_index":143,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["z]{2,}))$'].join",{"_index":145,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["za",{"_index":142,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["zap",{"_index":703,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":512,"title":{},"body":{"modules/NgbAuthFirebaseUIModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/auth/module/components/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngb-auth-firebaseui\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                authenticationError\n                            \n                            \n                                    Public\n                                authProcess\n                            \n                            \n                                authProvider\n                            \n                            \n                                authProviders\n                            \n                            \n                                onErrorSubscription\n                            \n                            \n                                passReset\n                            \n                            \n                                passwordResetWished\n                            \n                            \n                                resetPasswordEmailFormControl\n                            \n                            \n                                    Public\n                                resetPasswordFormGroup\n                            \n                            \n                                sigInPasswordFormControl\n                            \n                            \n                                signInEmailFormControl\n                            \n                            \n                                    Public\n                                signInFormGroup\n                            \n                            \n                                    Public\n                                signUpFormGroup\n                            \n                            \n                                sigUpEmailFormControl\n                            \n                            \n                                sigUpNameFormControl\n                            \n                            \n                                sigUpPasswordConfirmationFormControl\n                            \n                            \n                                sigUpPasswordFormControl\n                            \n                            \n                                    Public\n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initResetPasswordFormGroupBuilder\n                            \n                            \n                                    Private\n                                _initSignInFormGroupBuilder\n                            \n                            \n                                    Private\n                                _initSignUpFormGroupBuilder\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                selectResetPasswordTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                guestEnabled\n                            \n                            \n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onSuccess\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object, auth: AngularFireAuth, authProcess: AuthProcessService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/module/components/auth/auth.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authProcess\n                                                  \n                                                        \n                                                                    AuthProcessService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        guestEnabled\n                    \n                    \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        providers\n                    \n                    \n                            \n                            Type:    string[] | string\n\n                            \n                        \n                            Default value: AuthProvider.ALL\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:29\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onError\n                    \n                    \n                        $event type:    any\n\n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSuccess\n                    \n                    \n                        $event type:    any\n\n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initResetPasswordFormGroupBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _initResetPasswordFormGroupBuilder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initSignInFormGroupBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _initSignInFormGroupBuilder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initSignUpFormGroupBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _initSignUpFormGroupBuilder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectResetPasswordTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectResetPasswordTab()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticationError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticationError:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authProcess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authProcess:     AuthProcessService\n\n                    \n                \n                    \n                        \n                            Type :     AuthProcessService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authProvider:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthProvider\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authProviders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authProviders:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthProvider\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onErrorSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onErrorSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passReset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passReset:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordResetWished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordResetWished:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordEmailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPasswordEmailFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetPasswordFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPasswordFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sigInPasswordFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sigInPasswordFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInEmailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signInEmailFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signInFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signInFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signUpFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signUpFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sigUpEmailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sigUpEmailFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sigUpNameFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sigUpNameFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sigUpPasswordConfirmationFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sigUpPasswordConfirmationFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sigUpPasswordFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sigUpPasswordFormControl:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     NgbTabset\n\n                    \n                \n                    \n                        \n                            Type :     NgbTabset\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/auth/auth.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n\n                \n                    \n                        getcolor()\n                    \n                \n                            \n                                \n                                    Defined in src/auth/module/components/auth/auth.component.ts:87\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Inject, Input, OnDestroy, OnInit, Output, PLATFORM_ID, ViewChild} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {isPlatformBrowser} from '@angular/common';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport {NgbTabset} from '@ng-bootstrap/ng-bootstrap';\n\n\nexport const EMAIL_REGEX = new RegExp(['^(([^<>()[\\\\]\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\.,;:\\\\s@\\\"]+)*)',\n  '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n  '[0-9]{1,3}\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+',\n  '[a-zA-Z]{2,}))$'].join(''));\n\nexport const PHONE_NUMBER_REGEX = new RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/);\n\n@Component({\n  selector: 'ngb-auth-firebaseui',\n  templateUrl: 'auth.component.html',\n  styleUrls: ['auth.component.scss']\n})\n\nexport class AuthComponent implements OnInit, OnDestroy {\n\n  @ViewChild('tabs') public tabs: NgbTabset;\n\n\n  @Input()\n  providers: string[] | string = AuthProvider.ALL; //  google, facebook, twitter, github as array or all as one single string\n\n  @Input()\n  guestEnabled = true;\n\n  @Output()\n  onSuccess: any;\n\n  @Output()\n  onError: any;\n\n  authProvider = AuthProvider;\n  passwordResetWished: any;\n\n  public signInFormGroup: FormGroup;\n  public signUpFormGroup: FormGroup;\n  public resetPasswordFormGroup: FormGroup;\n\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  passReset = false;\n\n  authProviders = AuthProvider;\n\n  signInEmailFormControl: AbstractControl;\n  sigInPasswordFormControl: AbstractControl;\n\n  sigUpNameFormControl: AbstractControl;\n  sigUpEmailFormControl: AbstractControl;\n  sigUpPasswordFormControl: AbstractControl;\n  sigUpPasswordConfirmationFormControl: AbstractControl;\n  resetPasswordEmailFormControl: AbstractControl;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\n              public auth: AngularFireAuth,\n              public authProcess: AuthProcessService) {\n\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  public ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this._initSignInFormGroupBuilder();\n    this._initSignUpFormGroupBuilder();\n    this._initResetPasswordFormGroupBuilder();\n  }\n\n  public ngOnDestroy(): void {\n    if (this.onErrorSubscription) {\n      this.onErrorSubscription.unsubscribe();\n    }\n  }\n\n\n  get color(): string {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  public resetPassword() {\n    console.log('PasswordResetEmail sent');\n    this.authProcess.resetPassword(this.resetPasswordEmailFormControl.value)\n      .then(() => this.passReset = true);\n  }\n\n  public selectResetPasswordTab() {\n    this.passwordResetWished = true;\n    setTimeout(() => {\n      this.tabs.select('reset_password');\n    }, 1);\n  }\n\n  private _initSignInFormGroupBuilder() {\n    this.signInFormGroup = new FormGroup({});\n    this.signInFormGroup.registerControl('email', this.signInEmailFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX)\n      ]));\n    this.signInFormGroup.registerControl('password', this.sigInPasswordFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(25),\n      ]));\n  }\n\n  private _initSignUpFormGroupBuilder() {\n    this.signUpFormGroup = new FormGroup({\n      name: this.sigUpNameFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(30),\n        ]),\n      email: this.sigUpEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ]),\n      password: this.sigUpPasswordFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(25),\n        ])\n    });\n  }\n\n  private _initResetPasswordFormGroupBuilder() {\n    this.resetPasswordFormGroup = new FormGroup({\n      email: this.resetPasswordEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ])\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n\n        \n          E-mail\n          \n\n          \n          \n            \n              E-mail is required\n            \n            \n              Please enter a valid e-mail address\n            \n          \n        \n\n        \n          \n            Reset\n          \n        \n\n        \n          \n            Reset requested. Check your e-mail instructions!\n          \n        \n\n      \n    \n  \n\n  \n  \n    Sign in\n    \n      \n\n        \n          E-mail\n          \n            \n\n            \n            \n              \n                E-mail is required\n              \n              \n                Please enter a valid e-mail address\n              \n            \n          \n        \n\n        \n          Password\n          \n            \n\n            -->\n            \n            \n            -->\n\n            \n              \n                Please do not forget the password\n              \n              \n                The password must be at least 6 characters\n                long.\n              \n              \n                The password can not be longer than 25 characters.\n              \n            \n\n          \n        \n\n\n        \n          \n            \n              \n                Log in\n              \n            \n            \n              \n                Forgot Password?\n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    Register\n    \n      \n      \n        \n          \n            First name\n            \n            \n              \n                Name is required\n              \n              \n                The name is too short!\n              \n              \n                The name is too long!\n              \n            \n          \n          \n            E-mail\n            \n              \n\n              \n              \n                \n                  E-mail is required\n                \n                \n                  Please enter a valid e-mail address\n                \n              \n\n            \n          \n\n          \n            Password\n            \n              \n\n              -->\n              \n              \n              -->\n\n              \n                \n                  Please do not forget the password\n                \n                \n                  The password must be at least 6 characters\n                  long.\n                \n                \n                  The password can not be longer than 25 characters.\n                \n              \n\n            \n          \n\n          -->\n          -->\n          -->\n          -->\n          \n          -->\n          -->\n          \n          -->\n          -->\n          -->\n\n          \n            \n              \n                \n                  Register\n                \n              \n              \n                \n                  \n                  continue as guest\n                \n              \n            \n          \n        \n\n      \n      \n      \n        \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                E-mail                                                        E-mail is required                                      Please enter a valid e-mail address                                                            Reset                                                Reset requested. Check your e-mail instructions!                                      Sign in                            E-mail                                                                            E-mail is required                                            Please enter a valid e-mail address                                                              Password                                  -->                                    -->                                          Please do not forget the password                                            The password must be at least 6 characters                long.                                            The password can not be longer than 25 characters.                                                                                                        Log in                                                                    Forgot Password?                                                                Register                                              First name                                                      Name is required                                            The name is too short!                                            The name is too long!                                                          E-mail                                                                                        E-mail is required                                                  Please enter a valid e-mail address                                                                          Password                                        -->                                          -->                                                Please do not forget the password                                                  The password must be at least 6 characters                  long.                                                  The password can not be longer than 25 characters.                                                              -->          -->          -->          -->                    -->          -->                    -->          -->          -->                                                                      Register                                                                                                continue as guest                                                                                                          '\n    var COMPONENTS = [{'name': 'AuthComponent', 'selector': 'ngb-auth-firebaseui'},{'name': 'AuthProvidersComponent', 'selector': 'ngb-auth-firebaseui-providers'},{'name': 'EmailConfirmationComponent', 'selector': 'ngb-auth-firebaseui-email-confirmation'},{'name': 'ProgressBarComponent', 'selector': 'ngb-auth-firebaseui-progress-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthProcessService.html":{"url":"injectables/AuthProcessService.html","title":"injectable - AuthProcessService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthProcessService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/module/services/auth-process.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                emailConfirmationSent\n                            \n                            \n                                emailToConfirm\n                            \n                            \n                                isLoading\n                            \n                            \n                                onErrorEmitter\n                            \n                            \n                                onSuccessEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Public\n                                getPhotoPath\n                            \n                            \n                                    Public\n                                getUserPhotoUrl\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                handleSuccess\n                            \n                            \n                                    Public\n                                parseUserInfo\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                    Async\n                                signInWith\n                            \n                            \n                                    Public\n                                signInWithPhoneNumber\n                            \n                            \n                                    Public\n                                    Async\n                                signUp\n                            \n                            \n                                    Public\n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AngularFireAuth, _fireStoreService: FirestoreSyncService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/module/services/auth-process.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fireStoreService\n                                                  \n                                                        \n                                                                    FirestoreSyncService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPhotoPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPhotoPath(image: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:197\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        image\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserPhotoUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserPhotoUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:182\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:217\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleSuccess(userCredential: UserCredential)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userCredential\n                                                        \n                                                                    UserCredential\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseUserInfo(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     UserInfo\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Reset the password of the user via email\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe email to reset\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            signInWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signInWith(provider: AuthProvider, email?: string, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            General sign in mechanism to authenticate the users with a firebase project\nusing a traditional way, via username and password or by using an authentication provider\nlike google, facebook, twitter and github\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                        \n                                                                    AuthProvider\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe provider to authenticate with (google, facebook, twitter, github)\n\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \n(optional) the email of user - used only for a traditional sign in\n\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \n(optional) the password of user - used only for a traditional sign in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signInWithPhoneNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signInWithPhoneNumber()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:201\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            signUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signUp(name: string, email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Sign up new users via email and password.\nAfter that the user should verify and confirm an email sent via the firebase\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe name if the new user\n\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe email if the new user\n\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe password if the new user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            updateProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateProfile(name: string, photoURL: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:163\n                            \n                        \n\n\n                \n                    \n                            Update the profile (name + photo url) of the authenticated user in the\nfirebase authentication feature (not in firestore)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe new name of the authenticated user\n\n\n                                                        \n                                                \n                                                \n                                                        photoURL\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe new photo url of the authenticated user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailConfirmationSent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailConfirmationSent:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailToConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailToConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onErrorEmitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onErrorEmitter:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSuccessEmitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onSuccessEmitter:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/auth-process.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {ISignInProcess, ISignUpProcess} from '../interfaces/main.interface';\nimport {FirestoreSyncService} from './firestore-sync.service';\nimport * as firebase from 'firebase';\nimport {User, UserInfo} from 'firebase';\n\nimport {Accounts} from '../components/enums';\n\n// import User = firebase.User;\nimport GoogleAuthProvider = firebase.auth.GoogleAuthProvider;\nimport FacebookAuthProvider = firebase.auth.FacebookAuthProvider;\nimport TwitterAuthProvider = firebase.auth.TwitterAuthProvider;\nimport UserCredential = firebase.auth.UserCredential;\nimport GithubAuthProvider = firebase.auth.GithubAuthProvider;\n\nexport enum AuthProvider {\n  ALL = 'all',\n  ANONYMOUS = 'anonymous',\n  EmailAndPassword = 'firebase',\n  Google = 'google',\n  Facebook = 'facebook',\n  Twitter = 'twitter',\n  Github = 'github',\n  PhoneNumber = 'phoneNumber'\n}\n\n@Injectable()\nexport class AuthProcessService implements ISignInProcess, ISignUpProcess {\n\n  onSuccessEmitter: EventEmitter = new EventEmitter();\n  onErrorEmitter: EventEmitter = new EventEmitter();\n  isLoading: boolean;\n  emailConfirmationSent: boolean;\n  emailToConfirm: string;\n\n  constructor(public auth: AngularFireAuth,\n              private _fireStoreService: FirestoreSyncService) {\n  }\n\n  /**\n   * Reset the password of the user via email\n   *\n   * @param email - the email to reset\n   * @returns\n   */\n  public resetPassword(email: string) {\n    this.isLoading = true;\n    return this.auth.auth.sendPasswordResetEmail(email)\n      .then(() => {\n        this.isLoading = false;\n        console.log('email sent');\n        return;\n      })\n      .catch((error) => {\n        this.isLoading = false;\n        return this.onErrorEmitter.next(error);\n      });\n  }\n\n  /**\n   * General sign in mechanism to authenticate the users with a firebase project\n   * using a traditional way, via username and password or by using an authentication provider\n   * like google, facebook, twitter and github\n   *\n   * @param provider - the provider to authenticate with (google, facebook, twitter, github)\n   * @param email - (optional) the email of user - used only for a traditional sign in\n   * @param password - (optional) the password of user - used only for a traditional sign in\n   * @returns\n   */\n  public async signInWith(provider: AuthProvider, email?: string, password?: string) {\n    try {\n      this.isLoading = true;\n      let signInResult: UserCredential;\n\n      switch (provider) {\n        case AuthProvider.ANONYMOUS:\n          signInResult = await this.auth.auth.signInAnonymously() as UserCredential;\n          break;\n\n        case AuthProvider.EmailAndPassword:\n          signInResult = await this.auth.auth.signInWithEmailAndPassword(email, password) as UserCredential;\n          break;\n\n        case AuthProvider.Google:\n          signInResult = await this.auth.auth.signInWithPopup(new GoogleAuthProvider()) as UserCredential;\n          break;\n\n        case AuthProvider.Facebook:\n          signInResult = await this.auth.auth.signInWithPopup(new FacebookAuthProvider()) as UserCredential;\n          break;\n\n        case AuthProvider.Twitter:\n          signInResult = await this.auth.auth.signInWithPopup(new TwitterAuthProvider()) as UserCredential;\n          break;\n\n        case AuthProvider.Github:\n          signInResult = await this.auth.auth.signInWithPopup(new GithubAuthProvider()) as UserCredential;\n          break;\n\n        default:\n          throw new Error(`${AuthProvider[provider]} is not available as auth provider`);\n\n      }\n      await this.handleSuccess(signInResult);\n    } catch (err) {\n      this.handleError(err);\n      console.error(err);\n      // this._snackBar.open(err.message, 'OK', {duration: 5000});\n      this.onErrorEmitter.next(err);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Sign up new users via email and password.\n   * After that the user should verify and confirm an email sent via the firebase\n   *\n   * @param name - the name if the new user\n   * @param email - the email if the new user\n   * @param password - the password if the new user\n   * @returns\n   */\n  public async signUp(name: string, email: string, password: string) {\n    try {\n      this.isLoading = true;\n      const userCredential: UserCredential = await this.auth.auth.createUserWithEmailAndPassword(email, password);\n      const user = userCredential.user;\n      console.log('onsignUp the user = ', user);\n      await this._fireStoreService\n        .getUserDocRefByUID(user.uid)\n        .set({\n          uid: user.uid,\n          displayName: name,\n          email: user.email,\n          photoURL: user.photoURL\n        } as firebase.User);\n\n      await user.sendEmailVerification();\n      await this.updateProfile(name, user.photoURL);\n      this.emailConfirmationSent = true;\n      console.log('emailConfirmationSent = ', this.emailConfirmationSent);\n      this.emailToConfirm = email;\n\n      await this.handleSuccess(userCredential);\n    } catch (err) {\n      console.error(err);\n      this.handleError(err);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Update the profile (name + photo url) of the authenticated user in the\n   * firebase authentication feature (not in firestore)\n   *\n   * @param name - the new name of the authenticated user\n   * @param photoURL - the new photo url of the authenticated user\n   * @returns\n   */\n  public async updateProfile(name: string, photoURL: string): Promise {\n    return await this.auth.auth.currentUser.updateProfile({displayName: name, photoURL: photoURL});\n  }\n\n  public async deleteAccount(): Promise {\n    return await this.auth.auth.currentUser.delete();\n  }\n\n  public parseUserInfo(user: User): UserInfo {\n    return {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      photoURL: user.photoURL,\n      providerId: user.providerData.length > 0 ? user.providerData[0].providerId : null\n    };\n  }\n\n  public getUserPhotoUrl(): string {\n\n    const user: firebase.User | null = this.auth.auth.currentUser;\n\n    if (user.photoURL) {\n      return user.photoURL;\n    } else if (user.emailVerified) {\n      return this.getPhotoPath(Accounts.CHECK);\n    } else if (user.isAnonymous) {\n      return this.getPhotoPath(Accounts.OFF);\n    } else {\n      return this.getPhotoPath(Accounts.NONE);\n    }\n  }\n\n  public getPhotoPath(image: string) {\n    return `assets/user/${image}.svg`;\n  }\n\n  public signInWithPhoneNumber() {\n    // todo: 3.1.18\n  }\n\n  async handleSuccess(userCredential: UserCredential) {\n    console.log('sign in result = ', userCredential);\n\n    await this._fireStoreService.updateUserData(this.parseUserInfo(userCredential.user));\n\n    // if (this.config.toastMessageOnAuthSuccess) {\n      // this._snackBar.open(`Hallo ${userCredential.user.displayName ? userCredential.user.displayName : ''}!`,\n      //   'OK', {duration: 5000});\n    // }\n    this.onSuccessEmitter.next(userCredential.user);\n  }\n\n  handleError(error: any) {\n    // if (this.config.toastMessageOnAuthError) {\n      // this._snackBar.open(error.message, 'OK', {duration: 5000});\n    // }\n    console.error(error);\n    this.onErrorEmitter.next(error);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthProvidersComponent.html":{"url":"components/AuthProvidersComponent.html","title":"component - AuthProvidersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthProvidersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/auth/module/components/providers/auth.providers.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngb-auth-firebaseui-providers\n            \n\n            \n                styleUrls\n                auth.providers.component.scss\n            \n\n\n\n            \n                templateUrl\n                auth.providers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authProcess\n                            \n                            \n                                authProvider\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                            \n                                providers\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authProcess: AuthProcessService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/module/components/providers/auth.providers.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authProcess\n                                                  \n                                                        \n                                                                    AuthProcessService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: Layout.ROW\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/providers/auth.providers.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        providers\n                    \n                    \n                            \n                            Type:    string[] | string\n\n                            \n                        \n                            Default value: AuthProvider.ALL\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/providers/auth.providers.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authProcess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authProcess:     AuthProcessService\n\n                    \n                \n                    \n                        \n                            Type :     AuthProcessService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/providers/auth.providers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authProvider:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthProvider\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/components/providers/auth.providers.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\n\nexport enum Layout {\n  ROW = 'row',\n  COLUMN = 'column'\n}\n\n@Component({\n  selector: 'ngb-auth-firebaseui-providers',\n  templateUrl: 'auth.providers.component.html',\n  styleUrls: ['auth.providers.component.scss']\n})\n\nexport class AuthProvidersComponent {\n\n  @Input()\n  layout: string = Layout.ROW;\n\n  @Input()\n  providers: string[] | string = AuthProvider.ALL; //  google, facebook, twitter, github\n\n  authProvider = AuthProvider;\n\n  constructor(public authProcess: AuthProcessService) {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      Google\n    \n    \n      \n      Facebook\n    \n    \n      \n      Twitter\n    \n    \n      \n      GitHub\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Google                    Facebook                    Twitter                    GitHub      '\n    var COMPONENTS = [{'name': 'AuthComponent', 'selector': 'ngb-auth-firebaseui'},{'name': 'AuthProvidersComponent', 'selector': 'ngb-auth-firebaseui-providers'},{'name': 'EmailConfirmationComponent', 'selector': 'ngb-auth-firebaseui-email-confirmation'},{'name': 'ProgressBarComponent', 'selector': 'ngb-auth-firebaseui-progress-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthProvidersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailConfirmationComponent.html":{"url":"components/EmailConfirmationComponent.html","title":"component - EmailConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/auth/module/components/email-confirmation/email-confirmation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngb-auth-firebaseui-email-confirmation\n            \n\n            \n                styleUrls\n                email-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email-confirmation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/module/components/email-confirmation/email-confirmation.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/auth/module/components/email-confirmation/email-confirmation.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/components/email-confirmation/email-confirmation.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'ngb-auth-firebaseui-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss']\n})\nexport class EmailConfirmationComponent implements OnInit {\n\n  @Input()\n  email: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Confirm your e-mail address!\n    \n      A confirmation e-mail has been sent to\n      {{email}}\n    \n\n    Check your inbox and click on the link \"Confirm my e-mail\" to confirm your\n      e-mail\n      address.\n\n    Go back to the sign up page\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm your e-mail address!          A confirmation e-mail has been sent to      {{email}}        Check your inbox and click on the link \"Confirm my e-mail\" to confirm your      e-mail      address.    Go back to the sign up page  '\n    var COMPONENTS = [{'name': 'AuthComponent', 'selector': 'ngb-auth-firebaseui'},{'name': 'AuthProvidersComponent', 'selector': 'ngb-auth-firebaseui-providers'},{'name': 'EmailConfirmationComponent', 'selector': 'ngb-auth-firebaseui-email-confirmation'},{'name': 'ProgressBarComponent', 'selector': 'ngb-auth-firebaseui-progress-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirestoreSyncService.html":{"url":"injectables/FirestoreSyncService.html","title":"injectable - FirestoreSyncService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FirestoreSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/module/services/firestore-sync.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteUserData\n                            \n                            \n                                    Public\n                                getUserDocRefByUID\n                            \n                            \n                                    Public\n                                getUsersCollectionRef\n                            \n                            \n                                    Public\n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/auth/module/services/firestore-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deleteUserData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteUserData(uid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/firestore-sync.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserDocRefByUID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserDocRefByUID(uid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/firestore-sync.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreDocument\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUsersCollectionRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUsersCollectionRef(queryFn?: QueryFn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/firestore-sync.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryFn\n                                                        \n                                                                    QueryFn\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateUserData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateUserData(user: UserInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/services/firestore-sync.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    UserInfo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afs:     AngularFirestore\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/module/services/firestore-sync.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from 'angularfire2/firestore';\nimport {QueryFn} from 'angularfire2/firestore/interfaces';\nimport {UserInfo} from 'firebase';\n\nexport const collections = {\n  users: 'users',\n};\n\n@Injectable()\nexport class FirestoreSyncService {\n\n  constructor(public afs: AngularFirestore) {\n    // this.afs.firestore.settings({timestampsInSnapshots: true});\n  }\n\n  // get timestamp() {\n  //     return firebase.firestore.FieldValue.serverTimestamp();\n  // }\n\n  public getUserDocRefByUID(uid: string): AngularFirestoreDocument {\n    return this.afs.doc(`${collections.users}/${uid}`);\n  }\n\n\n  public getUsersCollectionRef(queryFn?: QueryFn): AngularFirestoreCollection {\n    return this.afs.collection(`${collections.users}/`, queryFn);\n  }\n\n  public deleteUserData(uid: string): Promise {\n    const userRef: AngularFirestoreDocument = this.getUserDocRefByUID(uid);\n    return userRef.delete();\n  }\n\n\n  public updateUserData(user: UserInfo): Promise {\n    console.log('on updateUserData for the user -> ', user);\n    // Sets user$ data to firestore on login\n    const userRef: AngularFirestoreDocument = this.getUserDocRefByUID(user.uid);\n    const data: UserInfo = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      phoneNumber: user.phoneNumber,\n      providerId: user.providerId\n    };\n    return userRef.set(data, {merge: true});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISignInProcess.html":{"url":"interfaces/ISignInProcess.html","title":"interface - ISignInProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISignInProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/module/interfaces/main.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        onErrorEmitter\n                                \n                                \n                                        onSuccessEmitter\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    resetPassword\n                                \n                                \n                                    signInWith\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/interfaces/main.interface.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWith(provider: AuthProvider, email?: string, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/interfaces/main.interface.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                        \n                                                                    AuthProvider\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onErrorEmitter\n                                    \n                                \n                                \n                                    \n                                        onErrorEmitter:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSuccessEmitter\n                                    \n                                \n                                \n                                    \n                                        onSuccessEmitter:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AuthProvider} from '../services/auth-process.service';\n\nexport interface ISignUpProcess {\n\n  signUp(name: string, email: string, password: string): any;\n}\n\nexport interface ISignInProcess {\n\n  onSuccessEmitter: any;\n  onErrorEmitter: any;\n\n  signInWith(provider: AuthProvider, email?: string, password?: string): any;\n\n  resetPassword(email: string): any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISignUpProcess.html":{"url":"interfaces/ISignUpProcess.html","title":"interface - ISignUpProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISignUpProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/module/interfaces/main.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    signUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignUp(name: string, email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/module/interfaces/main.interface.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {AuthProvider} from '../services/auth-process.service';\n\nexport interface ISignUpProcess {\n\n  signUp(name: string, email: string, password: string): any;\n}\n\nexport interface ISignInProcess {\n\n  onSuccessEmitter: any;\n  onErrorEmitter: any;\n\n  signInWith(provider: AuthProvider, email?: string, password?: string): any;\n\n  resetPassword(email: string): any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgBootstrapAuthFirebaseUIConfig.html":{"url":"interfaces/NgBootstrapAuthFirebaseUIConfig.html","title":"interface - NgBootstrapAuthFirebaseUIConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgBootstrapAuthFirebaseUIConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/module/interfaces/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        authNextURL\n                                \n                                \n                                            Optional\n                                        authProviders\n                                \n                                \n                                            Optional\n                                        languageCode\n                                \n                                \n                                            Optional\n                                        onlyEmailPasswordAuth\n                                \n                                \n                                            Optional\n                                        ppUrl\n                                \n                                \n                                            Optional\n                                        toastMessageOnAuthError\n                                \n                                \n                                            Optional\n                                        toastMessageOnAuthSuccess\n                                \n                                \n                                            Optional\n                                        tosUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authNextURL\n                                    \n                                \n                                \n                                    \n                                        authNextURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authProviders\n                                    \n                                \n                                \n                                    \n                                        authProviders:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languageCode\n                                    \n                                \n                                \n                                    \n                                        languageCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlyEmailPasswordAuth\n                                    \n                                \n                                \n                                    \n                                        onlyEmailPasswordAuth:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ppUrl\n                                    \n                                \n                                \n                                    \n                                        ppUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toastMessageOnAuthError\n                                    \n                                \n                                \n                                    \n                                        toastMessageOnAuthError:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toastMessageOnAuthSuccess\n                                    \n                                \n                                \n                                    \n                                        toastMessageOnAuthSuccess:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tosUrl\n                                    \n                                \n                                \n                                    \n                                        tosUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import AuthProvider = firebase.auth.AuthProvider;\n\nexport interface NgBootstrapAuthFirebaseUIConfig {\n  authNextURL?: string, // popup or redirect\n  tosUrl?: string, // term of services url\n  ppUrl?: string, // privacy policy url\n  authProviders?: Array,\n  languageCode?: string, // todo: 28.3.18\n  onlyEmailPasswordAuth?: boolean,\n  toastMessageOnAuthSuccess?: boolean,\n  toastMessageOnAuthError?: boolean\n}\n\nexport const defaultAuthFirebaseUIConfig: NgBootstrapAuthFirebaseUIConfig = {\n  // authMethod: 'redirect',\n  // authProviders: [new GoogleAuthProvider(), new FacebookAuthProvider(), new TwitterAuthProvider(), new GithubAuthProvider()],\n  // onlyEmailPasswordAuth: false,\n  toastMessageOnAuthSuccess: true,\n  toastMessageOnAuthError: true\n};\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgbAuthFirebaseUIModule.html":{"url":"modules/NgbAuthFirebaseUIModule.html","title":"module - NgbAuthFirebaseUIModule","body":"\n                   \n\n\n\n\n  Modules\n  NgbAuthFirebaseUIModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgbAuthFirebaseUIModule\n\n\n\ncluster_NgbAuthFirebaseUIModule_declarations\n\n\n\ncluster_NgbAuthFirebaseUIModule_exports\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nNgbAuthFirebaseUIModule\n\nNgbAuthFirebaseUIModule\n\nNgbAuthFirebaseUIModule -->\n\nAuthComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nAuthProvidersComponent\n\nAuthProvidersComponent\n\nNgbAuthFirebaseUIModule -->\n\nAuthProvidersComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nEmailConfirmationComponent\n\nEmailConfirmationComponent\n\nNgbAuthFirebaseUIModule -->\n\nEmailConfirmationComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nProgressBarComponent\n\nProgressBarComponent\n\nNgbAuthFirebaseUIModule -->\n\nProgressBarComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nAuthComponent \n\nAuthComponent \n\nAuthComponent  -->\n\nNgbAuthFirebaseUIModule->AuthComponent \n\n\n\n\n\nAuthProvidersComponent \n\nAuthProvidersComponent \n\nAuthProvidersComponent  -->\n\nNgbAuthFirebaseUIModule->AuthProvidersComponent \n\n\n\n\n\nEmailConfirmationComponent \n\nEmailConfirmationComponent \n\nEmailConfirmationComponent  -->\n\nNgbAuthFirebaseUIModule->EmailConfirmationComponent \n\n\n\n\n\nProgressBarComponent \n\nProgressBarComponent \n\nProgressBarComponent  -->\n\nNgbAuthFirebaseUIModule->ProgressBarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/module/ngb-auth-firebase-u-i.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthComponent\n                            \n                            \n                                AuthProvidersComponent\n                            \n                            \n                                EmailConfirmationComponent\n                            \n                            \n                                ProgressBarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthComponent\n                            \n                            \n                                    AuthProvidersComponent\n                            \n                            \n                                    EmailConfirmationComponent\n                            \n                            \n                                    ProgressBarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {InjectionToken, ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {AuthProcessService} from './services/auth-process.service';\nimport {FirestoreSyncService} from './services/firestore-sync.service';\nimport {FirebaseAppConfig, FirebaseNameOrConfigToken, FirebaseOptionsToken} from 'angularfire2';\nimport {AngularFirestoreModule} from 'angularfire2/firestore';\nimport {defaultAuthFirebaseUIConfig, NgBootstrapAuthFirebaseUIConfig} from './interfaces/config.interface';\nimport {AuthComponent} from './components/auth/auth.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {EmailConfirmationComponent} from './components/email-confirmation/email-confirmation.component';\nimport {ProgressBarComponent} from './components/progress-bar/progress-bar.component';\nimport {AuthProvidersComponent} from './components/providers/auth.providers.component';\n\n// Export module's public API\n// components\nexport {AuthComponent} from './components/auth/auth.component';\nexport {EmailConfirmationComponent} from './components/email-confirmation/email-confirmation.component';\nexport {ProgressBarComponent} from './components/progress-bar/progress-bar.component';\nexport {AuthProvidersComponent} from './components/providers/auth.providers.component';\n\n// services\nexport {AuthProcessService, AuthProvider} from './services/auth-process.service';\nexport {FirestoreSyncService} from './services/firestore-sync.service';\n\n// interfaces\nexport {NgBootstrapAuthFirebaseUIConfig} from './interfaces/config.interface';\n\nexport const NgBootstrapAuthFirebaseUIConfigToken = new InjectionToken('NgBootstrapAuthFirebaseUIConfig');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule\n  ],\n  exports:\n    [\n      AuthComponent,\n      AuthProvidersComponent,\n      EmailConfirmationComponent,\n      ProgressBarComponent,\n      AngularFireAuthModule,\n      AngularFirestoreModule\n    ],\n  declarations:\n    [\n      AuthComponent,\n      AuthProvidersComponent,\n      EmailConfirmationComponent,\n      ProgressBarComponent\n    ]\n})\nexport class NgbAuthFirebaseUIModule {\n  static forRoot(configFactory: FirebaseAppConfig,\n                 appNameFactory?: () => string,\n                 config: NgBootstrapAuthFirebaseUIConfig = defaultAuthFirebaseUIConfig): ModuleWithProviders {\n    return {\n      ngModule: NgbAuthFirebaseUIModule,\n      providers:\n        [\n          {\n            provide: FirebaseOptionsToken,\n            useValue: configFactory\n          },\n          {\n            provide: FirebaseNameOrConfigToken,\n            useFactory: appNameFactory\n          },\n          {\n            provide: NgBootstrapAuthFirebaseUIConfigToken,\n            useValue: config\n          },\n          AuthProcessService,\n          FirestoreSyncService\n        ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressBarComponent.html":{"url":"components/ProgressBarComponent.html","title":"component - ProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/auth/module/components/progress-bar/progress-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngb-auth-firebaseui-progress-bar\n            \n\n            \n                styleUrls\n                progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress-bar.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngb-auth-firebaseui-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent {\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AuthComponent', 'selector': 'ngb-auth-firebaseui'},{'name': 'AuthProvidersComponent', 'selector': 'ngb-auth-firebaseui-providers'},{'name': 'EmailConfirmationComponent', 'selector': 'ngb-auth-firebaseui-email-confirmation'},{'name': 'ProgressBarComponent', 'selector': 'ngb-auth-firebaseui-progress-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @ng-bootstrap/ng-bootstrap : ^2.2.0\n        \n            angularfire2 : 5.0.0-rc.11\n        \n            firebase : ^5.2.0\n        \n            font-awesome : ^4.7.0\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Accounts   (src/.../accounts.enum.ts)\n                        \n                        \n                            AuthProvider   (src/.../auth-process.service.ts)\n                        \n                        \n                            Layout   (src/.../auth.providers.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/module/components/enums/accounts.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Accounts\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value: account\n                            \n                        \n                        \n                            \n                                 CHECK\n                            \n                        \n                        \n                            \n                                Value: account-check\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value: account-edit\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value: account-off\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value: account-remove\n                            \n                        \n            \n        \n\n    src/auth/module/services/auth-process.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthProvider\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value: all\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value: anonymous\n                            \n                        \n                        \n                            \n                                 EmailAndPassword\n                            \n                        \n                        \n                            \n                                Value: firebase\n                            \n                        \n                        \n                            \n                                 Google\n                            \n                        \n                        \n                            \n                                Value: google\n                            \n                        \n                        \n                            \n                                 Facebook\n                            \n                        \n                        \n                            \n                                Value: facebook\n                            \n                        \n                        \n                            \n                                 Twitter\n                            \n                        \n                        \n                            \n                                Value: twitter\n                            \n                        \n                        \n                            \n                                 Github\n                            \n                        \n                        \n                            \n                                Value: github\n                            \n                        \n                        \n                            \n                                 PhoneNumber\n                            \n                        \n                        \n                            \n                                Value: phoneNumber\n                            \n                        \n            \n        \n\n    src/auth/module/components/providers/auth.providers.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Layout\n                    \n                \n                        \n                            \n                                 ROW\n                            \n                        \n                        \n                            \n                                Value: row\n                            \n                        \n                        \n                            \n                                 COLUMN\n                            \n                        \n                        \n                            \n                                Value: column\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@firebaseui/ng-bootstrap - Angular Bootstrap UI library for firebase authentication powered by @ng-bootstrap\n\n\n\n\n\n\n\n\n\n\n\nBuilt by and for developers :heart:\nDo you have any question or suggestion ? Please do not hesitate to contact us!\nAlternatively, provide a PR | open an appropriate issue here\nIf did you like this project, support @firebaseui/ng-bootstrap \nby starring :star: and sharing it :loudspeaker:\nTable of Contents\n\n@firebaseui/ng-bootstrap :heart: ngx-auth-firebaseui | vs firebaseui-web\nWhy to use @firebaseui/ng-bootstrap ?\nLibrary's components\nSupported Providers\nSupported Processes and Actions\nRequirements\nDemo\nFeatures\nExamples\nDocumentation\nScreenshots\nPeer Dependencies\nDependencies\nInstallation\nUsage\nAPI\nAdditional Requirements - font awesome icons\nAdditional Requirements - assets\nRun Demo App Locally\nDevelopment\nOther Angular Libraries\nSupport\nLicense\n\n\nngx-auth-firebaseui vs firebaseui-web\n\n\n\nFeatures\n@firebaseui/ng-bootstrap\nngx-auth-firebaseui\nfirebaseui\n\n\n\n\nSign Up\n:heavy_check_mark:\n:heavy_check_mark:\n:heavy_check_mark:\n\n\nSign In\n:heavy_check_mark:\n:heavy_check_mark:\n:heavy_check_mark:\n\n\nSign In Anonymously\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nSign In with Google\n:soon:\n:heavy_check_mark:\n:heavy_check_mark:\n\n\nSign In with Facebook\n:soon:\n:heavy_check_mark:\n:heavy_check_mark:\n\n\nSign In with Twitter\n:soon:\n:heavy_check_mark:\n:heavy_check_mark:\n\n\nSign In with Github\n:soon:\n:heavy_check_mark:\n:heavy_check_mark:\n\n\nSign In with PhoneNumber\n:soon:\n:x:\n:heavy_check_mark:\n\n\nSign out\n:soon:\n:heavy_check_mark:\n:x:\n\n\nSign in/up progress indicator\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nPassword Strength indicator\n:soon:\n:heavy_check_mark:\n:x:\n\n\nForgot/Reset Password\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nDelete account\n:soon:\n:heavy_check_mark:\n:x:\n\n\nUser Profile\n:soon:\n:heavy_check_mark:\n:x:\n\n\nCheck whether user's email is verified\n:soon:\n:heavy_check_mark:\n:x:\n\n\nEdit user's display name (incl. validation)\n:soon:\n:heavy_check_mark:\n:x:\n\n\nEdit user's email (incl. validation)\n:soon:\n:heavy_check_mark:\n:x:\n\n\nEdit user's phone number (incl. validation)\n:soon:\n:heavy_check_mark:\n:x:\n\n\nConfigure your favorite auth provider in runtime\n:soon:\n:heavy_check_mark:\n:x:\n\n\nSync user'auth with Firestore  read more\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nAngular v2-6 friendly\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nInternationalization (i18n)\n:soon: @angular v7\n:soon: @angular v7\n:heavy_check_mark:\n\n\nIonic/cordova support\n:soon:  @firebaseui/ionic-auth\n:soon:  @firebaseui/ionic-auth\n:x:\n\n\nReal time form validation\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nEasy to integrate\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nSupport Server Side Rendering\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nSupport SPA without further config\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nSupport Safari private browsing\n:heavy_check_mark:\n:heavy_check_mark:\n:x:\n\n\nAWESOME\n:heavy_check_mark:\n:heavy_check_mark:\n:interrobang:\n\n\n\n\nWhy to use @firebaseui/ng-boostrap ?\n\n:gift_heart: it uses a responsive and accessible web design UX/UI from twitter bootstrap concepts and components (supporting desktop and mobile view).\n:lipstick: pick up your own theme! change the primary, secondary and danger colors whenever you need (e.g to support light and dark themes) via scss - bootstrap\n:ship: super easy to use with an angular based project (project that is created with the angular-cli)\n:soon: optional configuration\n:soon: configure your authentication providers in runtime\n:recycle: reusable components for every project that needs an authentication with a firebase project/app.\n:soon: built in feedback mechanism in form of a alert when an error or any important event occurred.\n:soon: ability to sign out or even to delete totally the account\n:ghost: your client does not want to create an account in your project? Let him to sign in anonymously!\n:soon: user profile component to display user's data using  via ngx-auth-firebaseui-user\n:zap: update user profile as feature\n:fire: Sync user's authentication with FIRESTORE AUTOMATICALLY\n:muscle: Forgot Password feature! Go and let your users to recover their passwords easily \n:tada: Supports SSR - Server Side Rendering\n\n\nLibrary's components\n\n used for the authentication process\n:soon:  used to display only buttons for providers like googe, facebook, twitter and github\n:soon:  used to display/edit the data of the current authenticated user\n\n\nSupported Providers:\n\nanonymously\nemail and password (traditional)\ngoogle :soon:\nfacebook :soon:\ntwitter :soon:\ngithub :soon:\nphone number :soon:\n\n\nSupported Processes and Actions:\n\nsign up\nsign in\nsign in Anonymously | with google, facebook, twitter, github\nsign out\nvalidation of password's strength while creating a new account using ngx-material-password-strength :soon:\nforgot/reset password\nsending email verifications\ndelete user's account :soon:\nedit user's profile like email, name, (profile picture :soon:) and phone number :soon:\nfirestore auto sync :fire:\n\n\nRequirements:\n\nng-bootstrap - v2 \nangular forms - v6.x\nangularfire2 - v5.0.0-rc.11\nfirebase - v5.x\nfont-awesome - v4.x\n\n\nDemo\n\nTry it outif(issues || feedback || you_need_more_features){\n  // send me an email -> to: anthony.na@hotmail.de\n}\n\nDependencies\n\nAngular (requires Angular 2 or higher, tested with v5 and v6)\n\nInstallation\nInstall above dependencies via npm. \nNow install @firebaseui/ng-bootstrap via:\nnpm install --save @firebaseui/ng-bootstrap\nSystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for @firebaseui/ng-bootstrap:\n`js\nmap: {\n  '@firebaseui/ng-bootstrap': 'node_modules/@firebaseui/ng-bootstrap/bundles/@firebaseui/ng-bootstrap.umd.js',\n}\n\n---\n\nOnce installed you need to import the main module:\n```js\nimport { NgbAuthFirebaseUIModule } from '@firebaseui/ng-bootstrap';The only remaining part is to list the imported module in your application module. The exact method will be slightly\ndifferent for the root (top-level) module for which you should end up with the code similar to (notice NgbAuthFirebaseUIModule.forRoot()):\nimport { NgbAuthFirebaseUIModule } from '@firebaseui/ng-bootstrap';\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgbAuthFirebaseUIModule.forRoot(), ...],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Other modules in your application can simply import NgbAuthFirebaseUIModule:\nimport { NgbAuthFirebaseUIModule } from '@firebaseui/ng-bootstrap';\n\n@NgModule({\n  declarations: [OtherComponent, ...],\n  imports: [NgbAuthFirebaseUIModule, ...], \n})\nexport class OtherModule {\n}Usage\n\nRun Demo App Locally\n\nclone this repo by running$ git clone https://github.com/firebaseui/ng-bootstrap.git\nlink the ngx-auth-firebaseui package\nuse gulp globally$ gulp link\nnavigate to the demo app directory\n$ cd demo\ninstall the dependencies\n$ npm i\nrun/start/serve the app$ npm run startor$ ng serve --open\nthe app is now hosted by http://localhost:4200/\n\n\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lint\n\nOther Angular Libraries\n\nngx-auth-firebaseui\n@angular-material-extensions/password-strength\n@angular-material-extensions/pages\n@angular-material-extensions/contacts\n@angular-material-extensions/faq\n@angular-material-extensions/jumbotron\n@angular-material-extensions/google-maps-autocomplete\n@angular-material-extensions/combination-generator\n\n\nSupport\n\nDrop an email to: Anthony Nahas\nor open an appropriate issue\nlet us chat on Gitter\nBuilt by and for developers :heart: we will help you :punch:\n\n\n\n\nLicense\nCopyright (c) 2018 Anthony Nahas. Licensed under the MIT License (MIT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Anthony Nahas\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgbAuthFirebaseUIModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgbAuthFirebaseUIModule\n\n\n\ncluster_NgbAuthFirebaseUIModule_declarations\n\n\n\ncluster_NgbAuthFirebaseUIModule_exports\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nNgbAuthFirebaseUIModule\n\nNgbAuthFirebaseUIModule\n\nNgbAuthFirebaseUIModule -->\n\nAuthComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nAuthProvidersComponent\n\nAuthProvidersComponent\n\nNgbAuthFirebaseUIModule -->\n\nAuthProvidersComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nEmailConfirmationComponent\n\nEmailConfirmationComponent\n\nNgbAuthFirebaseUIModule -->\n\nEmailConfirmationComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nProgressBarComponent\n\nProgressBarComponent\n\nNgbAuthFirebaseUIModule -->\n\nProgressBarComponent->NgbAuthFirebaseUIModule\n\n\n\n\n\nAuthComponent \n\nAuthComponent \n\nAuthComponent  -->\n\nNgbAuthFirebaseUIModule->AuthComponent \n\n\n\n\n\nAuthProvidersComponent \n\nAuthProvidersComponent \n\nAuthProvidersComponent  -->\n\nNgbAuthFirebaseUIModule->AuthProvidersComponent \n\n\n\n\n\nEmailConfirmationComponent \n\nEmailConfirmationComponent \n\nEmailConfirmationComponent  -->\n\nNgbAuthFirebaseUIModule->EmailConfirmationComponent \n\n\n\n\n\nProgressBarComponent \n\nProgressBarComponent \n\nProgressBarComponent  -->\n\nNgbAuthFirebaseUIModule->ProgressBarComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            collections   (src/.../firestore-sync.service.ts)\n                        \n                        \n                            defaultAuthFirebaseUIConfig   (src/.../config.interface.ts)\n                        \n                        \n                            EMAIL_REGEX   (src/.../auth.component.ts)\n                        \n                        \n                            NgBootstrapAuthFirebaseUIConfigToken   (src/.../ngb-auth-firebase-u-i.module.ts)\n                        \n                        \n                            PHONE_NUMBER_REGEX   (src/.../auth.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/module/services/firestore-sync.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collections\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collections:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  users: 'users',\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/module/interfaces/config.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuthFirebaseUIConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultAuthFirebaseUIConfig:     NgBootstrapAuthFirebaseUIConfig\n\n                    \n                \n                    \n                        \n                            Type :     NgBootstrapAuthFirebaseUIConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // authMethod: 'redirect',\n  // authProviders: [new GoogleAuthProvider(), new FacebookAuthProvider(), new TwitterAuthProvider(), new GithubAuthProvider()],\n  // onlyEmailPasswordAuth: false,\n  toastMessageOnAuthSuccess: true,\n  toastMessageOnAuthError: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/module/components/auth/auth.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_REGEX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EMAIL_REGEX:     \n\n                    \n                \n                    \n                        \n                            Default value : new RegExp(['^(([^<>()[\\\\]\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\.,;:\\\\s@\\\"]+)*)',\n  '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n  '[0-9]{1,3}\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+',\n  '[a-zA-Z]{2,}))$'].join(''))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PHONE_NUMBER_REGEX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PHONE_NUMBER_REGEX:     \n\n                    \n                \n                    \n                        \n                            Default value : new RegExp(/^\\+(?:[0-9] ?){6,14}[0-9]$/)\n                        \n                    \n\n\n            \n        \n\n    src/auth/module/ngb-auth-firebase-u-i.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NgBootstrapAuthFirebaseUIConfigToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NgBootstrapAuthFirebaseUIConfigToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgBootstrapAuthFirebaseUIConfig')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
